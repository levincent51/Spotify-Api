{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  // THIS IS the get now playing component\n  const [nowPlaying, setNowPlaying] = useState();\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 20\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setNowPlaying(prevState => ({ ...prevState,\n          items: response.items\n        }));\n        window.localStorage.setItem('name', response.item.name);\n        window.localStorage.setItem('image', response.item.album.images[0].url);\n      } else {\n        alert(\"You are not playing anything\");\n      }\n    });\n  }; //return should return, getTOPTRACKS, make playlist\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Now Playing: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getNowPlaying(),\n        children: \"Check Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logout(),\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Dashboard, \"2LXlsc5BFql+BtYndnjABNsMupc=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/Dashboard.js"],"names":["React","Component","useState","useEffect","SpotifyWebApi","logout","spotifyApi","Dashboard","nowPlaying","setNowPlaying","getNowPlaying","getMyRecentlyPlayedTracks","limit","then","response","console","log","prevState","items","window","localStorage","setItem","item","name","album","images","url","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAGhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,EAA5C;;AAKA,QAAMQ,aAAa,GAAG,MAAM;AACxBJ,IAAAA,UAAU,CAACK,yBAAX,CAAqC;AACnCC,MAAAA,KAAK,EAAG;AAD2B,KAArC,EAEGC,IAFH,CAESC,QAAD,IAAc;AACpB,UAAIA,QAAJ,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,QAAAA,aAAa,CAACQ,SAAS,KAAK,EAC1B,GAAGA,SADuB;AAE1BC,UAAAA,KAAK,EAAEJ,QAAQ,CAACI;AAFU,SAAL,CAAV,CAAb;AAIAC,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAmCP,QAAQ,CAACQ,IAAT,CAAcC,IAAjD;AACAJ,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAoCP,QAAQ,CAACQ,IAAT,CAAcE,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAAlE;AACD,OARD,MAQO;AAELC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AAEF,KAhBD;AAiBH,GAlBD,CATgC,CA+B5B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAA;AAAA;AAAA;AAAA,cAJA,eAOI;AAAQ,QAAA,OAAO,EAAE,MAAMjB,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUA;AAAQ,QAAA,OAAO,EAAE,MAAML,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBP;;GAlDuBE,S;;KAAAA,S","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\n\n\nexport default function Dashboard() {\n\n\n    // THIS IS the get now playing component\n    const [nowPlaying, setNowPlaying] = useState()\n\n\n\n    \n    const getNowPlaying = () => {\n        spotifyApi.getMyRecentlyPlayedTracks({\n          limit : 20\n        }).then((response) => {\n          if (response) {\n            console.log(response)\n            setNowPlaying(prevState => ({\n              ...prevState,\n              items: response.items\n            }));   \n            window.localStorage.setItem('name',response.item.name)\n            window.localStorage.setItem('image',response.item.album.images[0].url)        \n          } else {\n    \n            alert(\"You are not playing anything\")\n          }\n    \n        })\n    }\n\n\n\n        //return should return, getTOPTRACKS, make playlist\n        return (\n            <div className=\"Dashboard\">\n                <h1>\n                <div>\n                    Now Playing: {  }\n                </div>\n                <div>\n                    {/*<img src={nowPlaying.albumArt} style={{ height: 150 }}/>*/}\n                </div>\n                    <button onClick={() => getNowPlaying()}>\n                    Check Now Playing\n                    </button>\n                <button onClick={() => logout()}>\n                    Log Out\n                </button> \n                </h1>\n            </div>\n        )\n}\n"]},"metadata":{},"sourceType":"module"}