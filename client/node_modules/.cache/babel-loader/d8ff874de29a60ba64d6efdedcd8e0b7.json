{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nexport default function Dashboard() {\n  _s();\n\n  const [nowPlaying, setNowPlaying] = useState({\n    name: window.localStorage.getItem('name'),\n    albumArt: window.localStorage.getItem('image')\n  });\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      if (response) {\n        setNowPlaying(prevState => ({ ...prevState,\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }));\n        window.localStorage.setItem('name', response.item.name);\n        window.localStorage.setItem('image', response.item.album.images[0].url);\n      } else {\n        alert(\"YOU ARE not playing anything\");\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Now Playing/Last Played: \", nowPlaying.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nowPlaying.albumArt,\n            style: {\n              height: 150\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => getNowPlaying(),\n          children: \"Check Now Playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => logout(),\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n}\n\n_s(Dashboard, \"Bm3+KGdT5lVj0uqyVEgmYWCv8Ys=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/components/Dashboard.js"],"names":["React","Component","useState","useEffect","SpotifyWebApi","spotifyApi","Dashboard","nowPlaying","setNowPlaying","name","window","localStorage","getItem","albumArt","getNowPlaying","getMyCurrentPlaybackState","then","response","prevState","item","album","images","url","setItem","alert","height","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAGA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;AAEA,eAAe,SAASE,SAAT,GAAqB;AAAA;;AAEhC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAR;AAA6CC,IAAAA,QAAQ,EAAEH,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAAvD,GAAD,CAA5C;;AAEA,QAAME,aAAa,GAAG,MAAM;AACxBT,IAAAA,UAAU,CAACU,yBAAX,GACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZT,QAAAA,aAAa,CAACU,SAAS,KAAK,EAC1B,GAAGA,SADuB;AAE1BT,UAAAA,IAAI,EAAEQ,QAAQ,CAACE,IAAT,CAAcV,IAFM;AAG1BI,UAAAA,QAAQ,EAAEI,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAHd,SAAL,CAAV,CAAb;AAKAZ,QAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,MAA5B,EAAmCN,QAAQ,CAACE,IAAT,CAAcV,IAAjD;AACAC,QAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,OAA5B,EAAoCN,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,GAAlE;AACD,OARD,MAQO;AAELE,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AAEF,KAfD;AAiBA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAA,gCACA;AAAA,kDAC+BjB,UAAU,CAACE,IAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEF,UAAU,CAACM,QAArB;AAA+B,YAAA,KAAK,EAAE;AAAEY,cAAAA,MAAM,EAAE;AAAV;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJA,eAOI;AAAQ,UAAA,OAAO,EAAE,MAAMX,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUA;AAAQ,UAAA,OAAO,EAAE,MAAMY,MAAM,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBD,GApCH;AAsCH;;GA1CuBpB,S;;KAAAA,S","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n\nconst spotifyApi = new SpotifyWebApi();\n\nexport default function Dashboard() {\n\n    const [nowPlaying, setNowPlaying] = useState({ name: window.localStorage.getItem('name'), albumArt: window.localStorage.getItem('image')})\n\n    const getNowPlaying = () => {\n        spotifyApi.getMyCurrentPlaybackState()\n        .then((response) => {\n          if (response) {\n            setNowPlaying(prevState => ({\n              ...prevState,\n              name: response.item.name, \n              albumArt: response.item.album.images[0].url\n            }));   \n            window.localStorage.setItem('name',response.item.name)\n            window.localStorage.setItem('image',response.item.album.images[0].url)        \n          } else {\n    \n            alert(\"YOU ARE not playing anything\")\n          }\n    \n        })\n\n        return (\n            <div className=\"Dashboard\">\n                <h1>\n                <div>\n                    Now Playing/Last Played: { nowPlaying.name }\n                </div>\n                <div>\n                    <img src={nowPlaying.albumArt} style={{ height: 150 }}/>\n                </div>\n                    <button onClick={() => getNowPlaying()}>\n                    Check Now Playing\n                    </button>\n                <button onClick={() => logout()}>\n                    Log Out\n                </button> \n                </h1>\n            </div>\n        )\n      }\n\n}"]},"metadata":{},"sourceType":"module"}