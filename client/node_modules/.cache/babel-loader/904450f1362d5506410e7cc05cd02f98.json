{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { BrowserRoute, Route, Switch } from 'react-router-dom';\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport format from 'date-fns/format';\nimport { millisToMinutesAndSeconds } from '../components/functions';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableItem = (item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      className: \"row-link\",\n      children: millisToMinutesAndSeconds(item.track.duration_ms)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.artists.map(e => e.name).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, item.played_at, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = TableItem;\n\nconst RecentTracks = () => {\n  _s();\n\n  const [RecentlyPlayed, setRecentlyPlayed] = useState(); // variable limit? with useeffect to load more\n\n  useEffect(() => {\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setRecentlyPlayed({\n          items: response.items\n        });\n      }\n    });\n  }, []);\n  console.log(RecentlyPlayed);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-played\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recently played tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: RecentlyPlayed ? RecentlyPlayed.items.map((item, index) => TableItem(item, index)) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 103\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecentTracks, \"RocAk3aT3JYSa11NxM6eCpq6jXc=\");\n\n_c2 = RecentTracks;\nexport default RecentTracks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableItem\");\n$RefreshReg$(_c2, \"RecentTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js"],"names":["React","Component","useState","useEffect","BrowserRoute","Route","Switch","logout","spotifyApi","format","millisToMinutesAndSeconds","TableItem","item","index","track","uri","duration_ms","name","artists","map","e","join","Date","parse","played_at","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getMyRecentlyPlayedTracks","limit","then","response","console","log","items"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { BrowserRoute, Route, Switch } from 'react-router-dom'\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport format from 'date-fns/format';\nimport { millisToMinutesAndSeconds } from '../components/functions';\nimport './Dashboard.css'\n\n\nconst TableItem = (item, index) => (\n  <tr key={item.played_at}>\n    <td><a href={item.track.uri} className=\"row-link\">{millisToMinutesAndSeconds(item.track.duration_ms)}</a></td>\n\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{item.track.name}</a></td>\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{item.track.artists.map(e => e.name).join(\", \")}</a></td>\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma') }</a></td>\n  </tr>\n);\n\n\nconst RecentTracks = () => {\n\n    const [RecentlyPlayed, setRecentlyPlayed] = useState()\n\n    // variable limit? with useeffect to load more\n    useEffect(() => {\n      spotifyApi.getMyRecentlyPlayedTracks({\n        limit : 50,\n      }).then((response) => {\n        if (response) {\n          console.log(response)\n          setRecentlyPlayed( {\n            items: response.items\n          });   \n        } \n      })\n\n    },[])\n    console.log(RecentlyPlayed)\n\n    \n\nreturn (\n    <>\n    <div className=\"recently-played\">\n    <h2>Recently played tracks</h2>\n    <table className=\"table\">\n    <thead>\n        <tr>\n            <th>Duration</th>\n            <th>Track</th>\n            <th>Artist(s)</th>\n            <th>Played at</th>\n        </tr>\n        </thead>\n        <tbody>{RecentlyPlayed? (RecentlyPlayed.items.map((item, index) => TableItem(item, index))) : <h1>hi</h1>}</tbody>\n    </table>\n    </div>\n    </>\n)}\nexport default RecentTracks;"]},"metadata":{},"sourceType":"module"}