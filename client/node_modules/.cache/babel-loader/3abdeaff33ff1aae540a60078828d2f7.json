{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableItem = (item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      class: \"row-link\",\n      children: item.track.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabindex: \"-1\",\n      class: \"row-link\",\n      children: item.track.artists.map(e => e.name).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabindex: \"-1\",\n      class: \"row-link\",\n      children: format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this)]\n}, item.played_at, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n\n_c = TableItem;\n\nconst RecentTracks = () => {\n  _s();\n\n  const [RecentlyPlayed, setRecentlyPlayed] = useState(); // variable limit? with useeffect to load more\n\n  const getRecentlyPlayed = () => {\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setRecentlyPlayed({\n          items: response.items\n        });\n      }\n    });\n  };\n\n  console.log(RecentlyPlayed);\n  getRecentlyPlayed();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-played\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recently played tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: RecentlyPlayed.items.map((item, index) => TableItem(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecentTracks, \"x3r9HkRfGLrYHGg9ZEFdIAV/nFU=\");\n\n_c2 = RecentTracks;\nexport default RecentTracks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableItem\");\n$RefreshReg$(_c2, \"RecentTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js"],"names":["React","Component","useState","useEffect","format","spotifyApi","TableItem","item","index","track","uri","name","artists","map","e","join","Date","parse","played_at","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getRecentlyPlayed","getMyRecentlyPlayedTracks","limit","then","response","console","log","items"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport './Dashboard.css'\n\nconst TableItem = (item, index) => (\n    <tr key={item.played_at}>\n      <td><a href={item.track.uri} class=\"row-link\">{item.track.name}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{item.track.artists.map(e => e.name).join(\", \")}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma') }</a></td>\n    </tr>\n);\n\n\nconst RecentTracks = () => {\n\n    const [RecentlyPlayed, setRecentlyPlayed] = useState()\n\n    // variable limit? with useeffect to load more\n    const getRecentlyPlayed = () => {\n  \n      spotifyApi.getMyRecentlyPlayedTracks({\n        limit : 50,\n      }).then((response) => {\n        if (response) {\n          console.log(response)\n          setRecentlyPlayed( {\n            items: response.items\n          });   \n        } \n      })\n\n    }\n    console.log(RecentlyPlayed)\n\n    getRecentlyPlayed()\n\nreturn (\n        <>\n        <div className=\"recently-played\">\n        <h2>Recently played tracks</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Track</th>\n              <th>Artist(s)</th>\n              <th>Played at</th>\n            </tr>\n          </thead>\n          <tbody>{RecentlyPlayed.items.map((item, index) => TableItem(item, index))}</tbody>\n        </table>\n        </div>\n        </>\n    )\n}\nexport default RecentTracks;"]},"metadata":{},"sourceType":"module"}