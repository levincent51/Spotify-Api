{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import TrackInfo from\"../components/TrackInfo\";import React,{useState,useEffect}from\"react\";import{spotifyApi,token,getAccessToken}from\"../components/spotifyAPI\";var getplaylists=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(playlists,limit,offset){var newOffset,newPlaylist;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newOffset=offset+limit;_context.next=3;return spotifyApi.getUserPlaylists({limit:limit,offset:offset}).then(function(response){if(response){newPlaylist=[].concat(_toConsumableArray(playlists),_toConsumableArray(response.items));/*if (response.next) {\n                newPlaylist = getplaylists(newPlaylist, limit, newOffset)\n            } */}}).catch(function(){getAccessToken();});case 3:return _context.abrupt(\"return\",newPlaylist);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getplaylists(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var getTrackfromPlaylist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(playlistId,tracks,limit,offset){var newOffset,newTrack;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newOffset=offset+limit;_context2.next=3;return spotifyApi.getPlaylistTracks(token,playlistId,{limit:limit,offset:offset}).then(function(response){if(response){newTrack=[].concat(_toConsumableArray(tracks),_toConsumableArray(response.items));/*if (response.next) {\n                newTrack = getTrackfromPlaylist(playlistId, newTrack, limit, newOffset)\n            } */}});case 3:return _context2.abrupt(\"return\",newTrack);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function getTrackfromPlaylist(_x4,_x5,_x6,_x7){return _ref2.apply(this,arguments);};}();var getAllSongs=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res){var c;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getTrackfromPlaylist(res,[],100,0).then(function(response){if(response){return response.map(function(x){return x.track.id;});}});case 2:c=_context3.sent;return _context3.abrupt(\"return\",c);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getAllSongs(_x8){return _ref3.apply(this,arguments);};}();export default function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return getplaylists([],50,0).then(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(response){var all_songs,_iterator,_step,index;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:all_songs=[];_iterator=_createForOfIteratorHelper(response.map(function(x){return x.id;}));_context4.prev=2;_iterator.s();case 4:if((_step=_iterator.n()).done){_context4.next=16;break;}index=_step.value;_context4.t0=[];_context4.t1=_toConsumableArray(all_songs);_context4.t2=_toConsumableArray;_context4.next=11;return getAllSongs(index);case 11:_context4.t3=_context4.sent;_context4.t4=(0,_context4.t2)(_context4.t3);all_songs=_context4.t0.concat.call(_context4.t0,_context4.t1,_context4.t4);case 14:_context4.next=4;break;case 16:_context4.next=21;break;case 18:_context4.prev=18;_context4.t5=_context4[\"catch\"](2);_iterator.e(_context4.t5);case 21:_context4.prev=21;_iterator.f();return _context4.finish(21);case 24:return _context4.abrupt(\"return\",all_songs);case 25:case\"end\":return _context4.stop();}}},_callee4,null,[[2,18,21,24]]);}));return function(_x9){return _ref4.apply(this,arguments);};}());case 2:return _context5.abrupt(\"return\",_context5.sent);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return _fetchData.apply(this,arguments);}","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/components/UserSongs.js"],"names":["TrackInfo","React","useState","useEffect","spotifyApi","token","getAccessToken","getplaylists","playlists","limit","offset","newOffset","getUserPlaylists","then","response","newPlaylist","items","catch","getTrackfromPlaylist","playlistId","tracks","getPlaylistTracks","newTrack","getAllSongs","res","map","x","track","id","c","fetchData","all_songs","index"],"mappings":"6iBAAA,MAAOA,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,KAArB,CAA4BC,cAA5B,KAAkD,0BAAlD,CAIA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,SAAP,CAAkBC,KAAlB,CAAyBC,MAAzB,4IACXC,SADW,CACCD,MAAM,CAAGD,KADV,uBAGXL,CAAAA,UAAU,CAACQ,gBAAX,CAA4B,CAC9BH,KAAK,CAAEA,KADuB,CAE9BC,MAAM,CAAEA,MAFsB,CAA5B,EAGHG,IAHG,CAGE,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAJ,CAAc,CACVC,WAAW,8BAAOP,SAAP,qBAAqBM,QAAQ,CAACE,KAA9B,EAAX,CACA;AACZ;AACA,gBACS,CACJ,CAVK,EAUHC,KAVG,CAUG,UAAM,CACXX,cAAc,GACjB,CAZK,CAHW,wCAgBVS,WAhBU,wDAAH,kBAAZR,CAAAA,YAAY,oDAAlB,CAmBA,GAAMW,CAAAA,oBAAoB,2FAAG,kBAAOC,UAAP,CAAmBC,MAAnB,CAA2BX,KAA3B,CAAkCC,MAAlC,6IACnBC,SADmB,CACPD,MAAM,CAAGD,KADF,wBAGnBL,CAAAA,UAAU,CAACiB,iBAAX,CACFhB,KADE,CAEFc,UAFE,CAGF,CAACV,KAAK,CAAEA,KAAR,CACAC,MAAM,CAAEA,MADR,CAHE,EAIgBG,IAJhB,CAIqB,SAACC,QAAD,CAAc,CACrC,GAAIA,QAAJ,CAAc,CACVQ,QAAQ,8BAAOF,MAAP,qBAAkBN,QAAQ,CAACE,KAA3B,EAAR,CACA;AACZ;AACA,gBACS,CACJ,CAXK,CAHmB,yCAgBlBM,QAhBkB,0DAAH,kBAApBJ,CAAAA,oBAAoB,0DAA1B,CAmBA,GAAMK,CAAAA,WAAW,2FAAG,kBAAOC,GAAP,mJACAN,CAAAA,oBAAoB,CAACM,GAAD,CAAK,EAAL,CAAQ,GAAR,CAAY,CAAZ,CAApB,CAAmCX,IAAnC,CAAyC,SAACC,QAAD,CAAc,CACnE,GAAIA,QAAJ,CAAc,CACV,MAAOA,CAAAA,QAAQ,CAACW,GAAT,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,CAAQC,EAAZ,EAAd,CAAP,CACH,CACJ,CAJe,CADA,QACVC,CADU,iDAOTA,CAPS,0DAAH,kBAAXN,CAAAA,WAAW,8CAAjB,CAUA,uBAA8BO,CAAAA,SAA9B,4C,yFAAe,+JACEvB,CAAAA,YAAY,CAAC,EAAD,CAAI,EAAJ,CAAO,CAAP,CAAZ,CAAsBM,IAAtB,2FACT,kBAAOC,QAAP,0JACQiB,SADR,CACoB,EADpB,sCAEwBjB,QAAQ,CAACW,GAAT,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACE,EAAN,EAAd,CAFxB,gGAEeI,KAFf,6DAGwBD,SAHxB,0DAG4CR,CAAAA,WAAW,CAACS,KAAD,CAHvD,iFAGQD,SAHR,qUAMWA,SANX,+EADS,iEADF,iH","sourcesContent":["import TrackInfo from \"../components/TrackInfo\";\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\n\n\n\nconst getplaylists = async (playlists, limit, offset) => {\n    const newOffset = offset + limit\n    var newPlaylist\n    await spotifyApi.getUserPlaylists({\n        limit: limit,\n        offset: offset,\n    }).then((response) => {\n        if (response) {\n            newPlaylist = [...playlists, ...response.items] ;\n            /*if (response.next) {\n                newPlaylist = getplaylists(newPlaylist, limit, newOffset)\n            } */\n        }\n    }).catch(() => {\n        getAccessToken()\n    })\n    return newPlaylist\n}\n\nconst getTrackfromPlaylist = async (playlistId, tracks, limit, offset) => {\n    const newOffset = offset + limit\n    var newTrack\n    await spotifyApi.getPlaylistTracks(\n        token,\n        playlistId,\n        {limit: limit,\n        offset: offset,}).then((response) => {\n        if (response) {\n            newTrack = [...tracks, ...response.items] ;\n            /*if (response.next) {\n                newTrack = getTrackfromPlaylist(playlistId, newTrack, limit, newOffset)\n            } */\n        }\n    })\n\n    return newTrack // AFTER THIS ARRAY.JOIN THEM ALL TO GET ALL THE track IDS WE NEED\n}\n\nconst getAllSongs = async (res) => {\n    const c = await getTrackfromPlaylist(res,[],100,0).then( (response) => {\n        if (response) { \n            return response.map(x => x.track.id) \n        }\n    })\n\n    return c\n}\n\nexport default async function fetchData() {\n    return await getplaylists([],50,0).then(\n        async (response) => {\n            var all_songs = []\n            for (const index of response.map(x => x.id)) {\n                all_songs = [...all_songs, ...await getAllSongs(index)]\n            }\n            // instead of set state maybe import this from home\n            return all_songs\n    })  \n}\n\n\n\n "]},"metadata":{},"sourceType":"module"}