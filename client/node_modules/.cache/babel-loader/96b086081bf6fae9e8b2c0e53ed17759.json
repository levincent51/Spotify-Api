{"ast":null,"code":"import _slicedToArray from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{spotifyApi,token,getAccessToken}from\"../components/spotifyAPI\";import TrackInfo from\"../components/TrackInfo\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopTracks=function TopTracks(){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),toggleState=_useState2[0],setToggleState=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),tracks=_useState4[0],setTracks=_useState4[1];var _useState5=useState(\"short_term\"),_useState6=_slicedToArray(_useState5,2),timeRange=_useState6[0],setTimeRange=_useState6[1];var changeTerm=function changeTerm(newTimeRange){setTracks();setTimeRange(newTimeRange);};var toggleTab=function toggleTab(index,time_range){changeTerm(time_range);setToggleState(index);};useEffect(function(){spotifyApi.getMyTopTracks({limit:50,time_range:timeRange}).then(function(response){if(response){console.log(response);setTracks({items:response.items});}}).catch(function(){token=getAccessToken();});;spotifyApi.getNewReleases().then(function(response){console.log(response);});},[timeRange]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Top Tracks\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bloc-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:toggleState===1?\"tabs active-tabs\":\"tabs\",onClick:function onClick(){return toggleTab(1,\"short_term\");},children:\"4 weeks\"}),/*#__PURE__*/_jsx(\"button\",{className:toggleState===2?\"tabs active-tabs\":\"tabs\",onClick:function onClick(){return toggleTab(2,\"medium_term\");},children:\"6 months\"}),/*#__PURE__*/_jsx(\"button\",{className:toggleState===3?\"tabs active-tabs\":\"tabs\",onClick:function onClick(){return toggleTab(3,\"long_term\");},children:\"All time\"})]}),tracks?/*#__PURE__*/_jsxs(\"div\",{className:\"content-tabs\",children:[/*#__PURE__*/_jsx(\"div\",{className:toggleState===1?\"content  active-content\":\"content\",children:tracks.items.map(function(track,key){return/*#__PURE__*/_jsx(TrackInfo,{track:track},key);})}),/*#__PURE__*/_jsx(\"div\",{className:toggleState===2?\"content  active-content\":\"content\",children:tracks.items.map(function(track,key){return/*#__PURE__*/_jsx(TrackInfo,{track:track},key);})}),/*#__PURE__*/_jsx(\"div\",{className:toggleState===3?\"content  active-content\":\"content\",children:tracks.items.map(function(track,key){return/*#__PURE__*/_jsx(TrackInfo,{track:track},key);})})]}):/*#__PURE__*/_jsx(\"b\",{children:\"LOADING\"})]})]});};export default TopTracks;","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js"],"names":["React","useState","useEffect","spotifyApi","token","getAccessToken","TrackInfo","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","changeTerm","newTimeRange","toggleTab","index","time_range","getMyTopTracks","limit","then","response","console","log","items","catch","getNewReleases","map","track","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = (newTimeRange) => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n  useEffect(() => {\n    spotifyApi\n      .getMyTopTracks({\n        limit: 50,\n        time_range: timeRange,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setTracks({\n            items: response.items,\n          });\n        }\n      })\n      .catch(() => {\n        token = getAccessToken()\n      });;\n\n    spotifyApi.getNewReleases().then((response) => {\n      console.log(response);\n    });\n  }, [timeRange]);\n\n  return (\n    <div>\n      <h2>Top Tracks</h2>\n\n      <div className=\"container\">\n        <div className=\"bloc-tabs\">\n          <button\n            className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(1, \"short_term\")}\n          >\n            4 weeks\n          </button>\n          <button\n            className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(2, \"medium_term\")}\n          >\n            6 months\n          </button>\n          <button\n            className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(3, \"long_term\")}\n          >\n            All time\n          </button>\n        </div>\n        {tracks ? (\n          <div className=\"content-tabs\">\n            <div\n              className={\n                toggleState === 1 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n            <div\n              className={\n                toggleState === 2 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n            <div\n              className={\n                toggleState === 3 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n          </div>\n        ) : (\n\n          <b>LOADING</b>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TopTracks;\n"]},"metadata":{},"sourceType":"module"}