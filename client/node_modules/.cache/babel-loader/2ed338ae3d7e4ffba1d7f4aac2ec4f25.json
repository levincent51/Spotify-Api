{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/Pages/TopArtist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reccommendations = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState();\n  const [allSongs, setAllSongs] = useState();\n  spotifyApi.getUserPlaylists({\n    limit: 1\n  }).then(response => {\n    if (response) {\n      console.log(response);\n    }\n\n    if (response.next) {}\n  }); // get every songs form every playlist and every saved \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reccommendations, \"jujWYPnJrxWzyP92XCse4ZSuNno=\");\n\n_c = Reccommendations;\nexport default Reccommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reccommendations\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/TopArtist.js"],"names":["React","useState","useEffect","spotifyApi","Reccommendations","playlists","setPlaylists","allSongs","setAllSongs","getUserPlaylists","limit","then","response","console","log","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,EAAxC;AACAE,EAAAA,UAAU,CAACM,gBAAX,CAA6B;AACzBC,IAAAA,KAAK,EAAE;AADkB,GAA7B,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,QAAIA,QAAJ,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH;;AACD,QAAIA,QAAQ,CAACG,IAAb,EAAmB,CAElB;AACJ,GATD,EAJ2B,CAe3B;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CApBD;;GAAMX,gB;;KAAAA,gB;AAsBN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\n\nconst Reccommendations = () => {\n\n    const [playlists, setPlaylists] = useState();\n    const [allSongs, setAllSongs] = useState()\n    spotifyApi.getUserPlaylists( {\n        limit: 1,\n    }).then((response) => {\n        if (response) {\n            console.log(response)\n        }\n        if (response.next) {\n\n        }\n    })\n\n    // get every songs form every playlist and every saved \n\n    return (\n        <div></div>\n    )\n}\n\nexport default Reccommendations"]},"metadata":{},"sourceType":"module"}