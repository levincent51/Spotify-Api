{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopTracks = () => {\n  _s();\n\n  const [toggleState, setToggleState] = useState(1);\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = newTimeRange => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n\n  useEffect(() => {\n    spotifyApi.getMyTopTracks({\n      limit: 50,\n      time_range: timeRange\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setTracks({\n          items: response.items\n        });\n      }\n    }).catch(() => {\n      getAccessToken();\n    });\n    ;\n  }, [timeRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Top Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloc-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 1 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(1, \"short_term\"),\n          children: \"4 weeks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 2 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(2, \"medium_term\"),\n          children: \"6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 3 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(3, \"long_term\"),\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), tracks ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 1 ? \"content  active-content\" : \"content\",\n          children: tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 2 ? \"content  active-content\" : \"content\",\n          children: tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 3 ? \"content  active-content\" : \"content\",\n          children: tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopTracks, \"/db5M7YYgxK15qPJJMLSgh/7obc=\");\n\n_c = TopTracks;\nexport default TopTracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js"],"names":["React","useState","useEffect","spotifyApi","token","getAccessToken","TrackInfo","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","changeTerm","newTimeRange","toggleTab","index","time_range","getMyTopTracks","limit","then","response","console","log","items","catch","map","track","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = (newTimeRange) => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n  useEffect(() => {\n    spotifyApi\n      .getMyTopTracks({\n        limit: 50,\n        time_range: timeRange,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setTracks({\n            items: response.items,\n          });\n        }\n      })\n      .catch(() => {\n        getAccessToken()\n      });;\n\n  }, [timeRange]);\n\n  return (\n    <div>\n      <h2>Top Tracks</h2>\n\n      <div className=\"container\">\n        <div className=\"bloc-tabs\">\n          <button\n            className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(1, \"short_term\")}\n          >\n            4 weeks\n          </button>\n          <button\n            className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(2, \"medium_term\")}\n          >\n            6 months\n          </button>\n          <button\n            className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(3, \"long_term\")}\n          >\n            All time\n          </button>\n        </div>\n        {tracks ? (\n          <div className=\"content-tabs\">\n            <div\n              className={\n                toggleState === 1 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n            <div\n              className={\n                toggleState === 2 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n            <div\n              className={\n                toggleState === 3 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n          </div>\n        ) : (\n\n          <b>LOADING</b>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TopTracks;\n"]},"metadata":{},"sourceType":"module"}