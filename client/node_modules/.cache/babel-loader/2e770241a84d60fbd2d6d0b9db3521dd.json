{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopTracks = () => {\n  _s();\n\n  const [toggleState, setToggleState] = useState(1);\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState('short_term');\n\n  const changeTerm = newTimeRange => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n\n  useEffect(() => {\n    spotifyApi.getMyTopTracks({\n      limit: 50,\n      time_range: timeRange\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setTracks({\n          items: response.items\n        });\n      }\n    });\n  }, [timeRange]);\n  console.log(tracks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"(\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloc-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 1 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(1, 'short_term'),\n          children: \"4 weeks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 2 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(2, 'medium_term'),\n          children: \"6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 3 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(3, 'long_term'),\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 1 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 48\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 2 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 46\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 3 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 46\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopTracks, \"uFnj2geNtHUhiBt17gUR3+2aJv4=\");\n\n_c = TopTracks;\nexport default TopTracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js"],"names":["React","useState","useEffect","spotifyApi","TrackInfo","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","changeTerm","newTimeRange","toggleTab","index","time_range","getMyTopTracks","limit","then","response","console","log","items","map","track","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n\n    const [toggleState, setToggleState] = useState(1);\n  \n\n\n    const [tracks, setTracks] = useState();\n    const [timeRange, setTimeRange] = useState('short_term');\n\n    const changeTerm = (newTimeRange) => {\n        setTracks();\n        setTimeRange(newTimeRange)\n    }\n    const toggleTab = (index, time_range) => {\n        changeTerm(time_range);\n        setToggleState(index);\n    };\n    useEffect(() => {\n        spotifyApi\n        .getMyTopTracks({\n            limit:50,\n            time_range: timeRange\n        })\n        .then((response) => {\n            if (response) {\n              console.log(response);\n              setTracks({\n                items: response.items,\n              });\n            }\n        });\n    }, [timeRange])\n\n    console.log(tracks)\n\n    return (\n        <div>\n             (<div className=\"container\">\n        <div className=\"bloc-tabs\">\n          <button\n            className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(1, 'short_term')}\n          >\n            4 weeks\n          </button>\n          <button\n            className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(2, 'medium_term')}\n          >\n            6 months\n          </button>\n          <button\n            className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(3, 'long_term') }\n          >\n            All time\n          </button>\n        </div>\n  \n        <div className=\"content-tabs\">\n          <div\n            className={toggleState === 1 ? \"content  active-content\" : \"content\"}\n          >\n            <h2>Top Tracks</h2>\n            <hr />\n\n              {tracks.items.map((track,key) => <TrackInfo key={key} track={track}/>)}\n\n          </div>\n  \n          <div\n            className={toggleState === 2 ? \"content  active-content\" : \"content\"}\n          >\n            <h2>Top Tracks</h2>\n            <hr />\n\n            {tracks.items.map((track,key) => <TrackInfo key={key} track={track}/>)}\n          </div>\n  \n          <div\n            className={toggleState === 3 ? \"content  active-content\" : \"content\"}\n          >\n            <h2>Top Tracks</h2>\n            <hr />\n       \n            {tracks.items.map((track,key) => <TrackInfo key={key} track={track}/>)}\n    \n          </div>\n        </div>\n      </div>\n            \n            )\n            \n\n        </div> \n    )\n};\n\n\nexport default TopTracks"]},"metadata":{},"sourceType":"module"}