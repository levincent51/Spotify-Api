{"version":3,"sources":["Pages/Login.js","components/functions.js","components/Navbar.js","components/spotifyAPI.js","components/TrackInfo.js","Pages/TopTracks.js","Pages/Moods.js","Pages/RecentTracks.js","Pages/Dashboard.js","App.js","index.js"],"names":["Login","className","href","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","LogoutButton","window","localStorage","clear","sessionStorage","location","replace","useState","loggedOut","setLoggedOut","Redirect","to","push","Button","onClick","removeItem","Navbar","activeStyle","fontWeight","color","style","float","spotifyApi","SpotifyWebApi","refreshAccessToken","a","refresh_token","getItem","axios","get","SERVER","params","then","res","access_token","data","console","log","setItem","Date","now","reload","catch","e","getAccessToken","hashParams","r","q","hash","substring","exec","decodeURIComponent","getHashParams","error","tokenExpiry","token","setAccessToken","TrackInfo","track","index","uri","src","album","images","url","alt","artists","map","name","join","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","toggleTab","time_range","newTimeRange","useEffect","getMyTopTracks","limit","response","items","key","indexOf","getplaylists","playlists","offset","newOffset","getUserPlaylists","newPlaylist","next","getTrackfromPlaylist","playlistId","getPlaylistTracks","newTrack","arraySplice","array","size","spliced","length","splice","Moods","audioFet","setAudioFet","allSongs","setAllSongs","mood","setMood","songs","setSongs","audio_feat","JSON","parse","trackstorage","getTracksfromList","arraysplice","Tracks","i","getTracks","x","id","c","moods","all_songs","unique","Set","stringify","fetchData","all_audio","allSongsSpliced","getAudioFeaturesForTracks","audio_features","audioFetFix","filter","FilteredSplice","valence","energy","danceability","alert","tempo","speechiness","instrumentalness","acousticness","liveness","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getMyRecentlyPlayedTracks","item","duration_ms","tabIndex","format","played_at","TableItem","Dashboard","isPlaying","setIsPlaying","interval","setInterval","getMyCurrentPlaybackState","is_playing","clearInterval","path","syncExternalDevice","syncExternalDeviceInterval","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad989f0a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Login.css\";\n\nconst SERVER_URL = \"http://localhost:8888/login\"; // https://react-express-spotify.herokuapp.com/login http://localhost:8888/login\n\nexport default function Login() {\nreturn (\n\t<div className=\"login\">\n\n\t<p>\n\t\tAn insight into your listening habits on Spotify\n\t</p>\n\t<a href={SERVER_URL}> Login to Spotify </a>\n\t</div>\n);\n}\n","import React, { useState } from \"react\";\n\n// gets hash parameters\nexport function getHashParams() {\n\tvar hashParams = {};\n\tvar e,\n\t\tr = /([^&;=]+)=?([^&;]*)/g,\n\t\tq = window.location.hash.substring(1);\n\te = r.exec(q);\n\twhile (e) {\n\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t\te = r.exec(q);\n\t}\n\n\treturn hashParams;\n}\n\nexport function millisToMinutesAndSeconds(millis) {\n\tvar minutes = Math.floor(millis / 60000);\n\tvar seconds = ((millis % 60000) / 1000).toFixed(0);\n\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n}\n\n\nexport const LogoutButton = () => {\n\twindow.localStorage.clear();\n\twindow.sessionStorage.clear();\n\twindow.location.replace(\"/\");\n\tconst [loggedOut, setLoggedOut] = useState(false);\n\n\tconst logout = () => {\n\t\tlocalStorage.removeItem(\"whpf_user\");\n\t\tsetLoggedOut(true);\n\t};\n\n\tif (loggedOut) {\n\t\treturn <Redirect to=\"/\" push={true} />;\n\t}\n\n\treturn <Button onClick={logout}>LogOut</Button>;\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n\treturn (\n\t\t<div className=\"navbar\">\n\t\t<li>\n\t\t\t<NavLink to=\"/\">HOME</NavLink>\n\t\t</li>\n\t\t<li>\n\t\t\t<NavLink\n\t\t\tto=\"/TopTracks\"\n\t\t\tactiveStyle={{\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\tcolor: \"green\",\n\t\t\t}}\n\t\t\t>\n\t\t\tTop Tracks\n\t\t\t</NavLink>\n\t\t</li>\n\t\t<li>\n\t\t\t<NavLink\n\t\t\tto=\"/RecentTracks\"\n\t\t\tactiveStyle={{\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\tcolor: \"green\",\n\t\t\t}}\n\t\t\t>\n\t\t\tRecentlyPlayed\n\t\t\t</NavLink>\n\t\t</li>\n\t\t<li>\n\t\t\t<NavLink\n\t\t\tto=\"/Moods\"\n\t\t\tactiveStyle={{\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\tcolor: \"green\",\n\t\t\t}}\n\t\t\t>\n\t\t\tMoods\n\t\t\t</NavLink>\n\t\t</li>\n\t\t<li style={{ float: \"right\" }}>\n\t\n\t\t\t<NavLink to=\"/logout\">Logout</NavLink>\n\t\t</li>\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","import axios from \"axios\";\nimport { getHashParams, getObject, setObject } from \"./functions\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst EXPIRATION_TIME = 3600000; // 1 hour\nconst SERVER = \"https://react-express-spotify.herokuapp.com/\"; // or https://react-express-spotify.herokuapp.com http://localhost:8888\n//REFRESH ACCESS TOKEN EVERY 1 HOUR\n// REFRESH_URI\n\n// USES JMPerez's spotify-web-api-js\n\nexport const spotifyApi = new SpotifyWebApi();\n\n// constantly refreshing\nexport const refreshAccessToken = async () => {\n// take refresh token from local storage\n\tconst refresh_token = window.localStorage.getItem(\"refresh_token\");\n\taxios\n\t\t.get(SERVER + \"refresh_token\", {\n\t\tparams: {\n\t\t\trefresh_token: refresh_token,\n\t\t},\n\t\t})\n\t\t.then((res) => {\n\t\tconst access_token = res.data.access_token;\n\t\tconsole.log(\"New acccess_token\", access_token);\n\t\twindow.localStorage.setItem(\"access_token\", access_token);\n\t\twindow.localStorage.setItem(\"token_timestamp\", Date.now());\n\t\twindow.location.reload();\n\t\t})\n\t\t.catch((e) => console.log(e));\n};\n\n// GET TOKEN, REFRESH IF REQUIRED\nexport const getAccessToken = () => {\n// Takes token from our url\n\n\tconst { error, access_token, refresh_token } = getHashParams();\n\n\t//  token invalid freom timeout\n\tif (error) {\n\t\tconsole.log(error);\n\t\trefreshAccessToken();\n\t}\n\n\tif (access_token && refresh_token) {\n\t\twindow.location.replace(\"/\");\n\t\twindow.localStorage.setItem(\"access_token\", access_token);\n\t\twindow.localStorage.setItem(\"refresh_token\", refresh_token);\n\t\twindow.localStorage.setItem(\"token_timestamp\", Date.now());\n\n\t\treturn access_token;\n\t}\n\t// THIS WILL AUTO REFRESH OUR TOKEN BASED ON EXPIRY TIME\n\tconst tokenExpiry = window.localStorage.getItem(\"token_timestamp\");\n\n\tif (\n\t\ttokenExpiry &&\n\t\ttokenExpiry !== \"undefined\" &&\n\t\tDate.now() - tokenExpiry > EXPIRATION_TIME\n\t) {\n\t\tconsole.log(\"Token expired, refreshing token\");\n\t\trefreshAccessToken();\n\t}\n\n\tconst local_access_token = window.localStorage.getItem(\"access_token\");\n\n\treturn local_access_token;\n};\n\n// SET OUR TOKEN with our spotify-web-api-js\nexport const token = getAccessToken();\n\nspotifyApi.setAccessToken(token);\n","import React from \"react\";\n\n// our track card for displaying artist, trackname and the picture\nconst TrackInfo = ({ track, index }) => {\n\treturn (\n\t\t<a className=\"TrackInfoLink\" href={track.uri}>\n\t\t<div className=\"card\">\n\t\t\t<img src={track.album.images[1].url} alt=\"Track\" />\n\t\t\t<div className=\"containerCard\">\n\t\t\t\t\n\t\t\t<h4>\n\t\t\t<p>{index + 1}</p>\n\t\t\t\t<b>{track.artists.map((e) => e.name).join(\", \")}</b>\n\t\t\t</h4>\n\t\t\t<p>{track.name}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t</a>\n\t);\n};\n\nexport default TrackInfo;\n","import React, { useState, useEffect } from \"react\";\nimport { spotifyApi, getAccessToken } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n  \tconst [toggleState, setToggleState] = useState(1);\n\n\tconst [tracks, setTracks] = useState();\n\tconst [timeRange, setTimeRange] = useState(\"short_term\");\n\n  \tconst changeTerm = (newTimeRange) => {\n\t\tif (newTimeRange != timeRange) {\n\t\t\tsetTracks()\n\t\t}\n\t\tsetTimeRange(newTimeRange);\n\t};\n\tconst toggleTab = (index, time_range) => {\n\t\tchangeTerm(time_range);\n\t\tsetToggleState(index);\n\t};\n  \tuseEffect(() => {\n\t\tspotifyApi\n\t\t.getMyTopTracks({\n\t\t\tlimit: 50,\n\t\t\ttime_range: timeRange,\n\t\t})\n\t\t.then((response) => {\n\t\t\tif (response) {\n\t\t\tconsole.log(response);\n\t\t\tsetTracks({\n\t\t\t\titems: response.items,\n\t\t\t});\n\t\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tgetAccessToken();\n\t\t});\n\t}, [timeRange]);\n\n\treturn (\n\t\t<div>\n\t\t<h2>Top Tracks</h2>\n\n\t\t<div className=\"container\">\n\t\t\t<div className=\"bloc-tabs\">\n\t\t\t<button\n\t\t\t\tclassName={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\tonClick={() => toggleTab(1, \"short_term\")}\n\t\t\t>\n\t\t\t\t4 weeks\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\tonClick={() => toggleTab(2, \"medium_term\")}\n\t\t\t>\n\t\t\t\t6 months\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tclassName={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\tonClick={() => toggleTab(3, \"long_term\")}\n\t\t\t>\n\t\t\t\tAll time\n\t\t\t</button>\n\t\t\t</div>\n\t\t\t{tracks ? (\n\t\t\t<div className=\"content-tabs\">\n\t\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\ttoggleState === 1 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t{tracks.items.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.items.indexOf(track)} />\n\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\ttoggleState === 2 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t{tracks.items.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.items.indexOf(track)} />\n\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\ttoggleState === 3 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t{tracks.items.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.items.indexOf(track)}  />\n\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t) : (\n\t\t\t<b>LOADING</b>\n\t\t\t)}\n\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TopTracks;\n","import TrackInfo from \"../components/TrackInfo\";\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\nimport fetchData from \"../components/UserSongs\";\n// CHOOSE YOUR MOODS: SAD, GYM, GROOVY(DANCE), HAPPY, STUDY, chill glad\n// GET AUDIOFEATURES OF SEVERAL TRACKS\n// GET ALL TRACKS FROM PLAYLIST, THEN ALL TRACJKS FROM SAVED\n\n// Find the best songs to fit your mood from your playlists:\n// sad songs: energy : less than 0.5 happy songs have more energy and dancibility VALENCE HIGH HAPPY LOW SAD\n// study songs have high instrumentals low speechiness\n\n/*\nDanceability: The degree of how suitable a track is for dancing based on tempo, rhythm stability, beat strength, and overall regularity. (0~1)\nEnergy: The perceptual measure of intensity based on dynamic range, perceived loudness, timbre, onset rate, and general entropy. (0~1)\nKey: The estimated overall pitch class of the track and its type of scale from which its melodic content is derived.\nLoudness: The quality of a sound that is the primary psychological correlate of amplitude in decibel. (-60~0)\nSpeechiness: The presence of spoken words in a track. (0~1)\nAcousticness: The confidence measure whether the track is acoustic. (0~1)\nLiveness: The presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. (0~1)\nValence: The musical positiveness conveyed by a track (e.g. happy, cheerful, euphoric). (0~1)\nTempo: The overall estimated tempo of a track in beats per minute (BPM). (±50~200)*/\n\n// LOGIC WORKSSS RECURSION\nconst getplaylists = async (playlists, limit, offset) => {\n\tconst newOffset = offset + limit;\n\tvar newPlaylist;\n\tawait spotifyApi\n\t.getUserPlaylists({\n\t\tlimit: limit,\n\t\toffset: offset,\n\t\t})\n\t\t.then((response) => {\n\t\tif (response) {\n\t\t\tconsole.log(response)\n\t\t\tnewPlaylist = [...playlists, ...response.items];\n\t\t\tif (response.next) {\n\t\t\tnewPlaylist = getplaylists(newPlaylist, limit, newOffset);\n\t\t\t}\n\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\tgetAccessToken();\n\t});\n\treturn newPlaylist;\n};\n\nconst getTrackfromPlaylist = async (playlistId, tracks, limit, offset) => {\n\tconst newOffset = offset + limit;\n\tvar newTrack;\n\tawait spotifyApi\n\t\t.getPlaylistTracks(token, playlistId, { limit: limit, offset: offset })\n\t\t.then((response) => {\n\t\tif (response) {\n\t\t\tnewTrack = [...tracks, ...response.items];\n\t\t\tif (response.next) {\n\t\t\tnewTrack = getTrackfromPlaylist(\n\t\t\t\tplaylistId,\n\t\t\t\tnewTrack,\n\t\t\t\tlimit,\n\t\t\t\tnewOffset\n\t\t\t);\n\t\t\t}\n\t\t}\n\t\t});\n\n\treturn newTrack; // AFTER THIS ARRAY.JOIN THEM ALL TO GET ALL THE track IDS WE NEED\n};\n\n\n\nconst getAllSongs = (res) => {\n\tconst c = getTrackfromPlaylist(res, [], 100, 0).then((response) => {\n\t\tif (response) {\n\t\treturn response.map((x) => x.track.id);\n\t\t//response.map(x => x.track.id)\n\t\t}\n\t});\n\n\treturn c;\n};\n\nfunction arraySplice(array, size) {\n\tvar a = array;\n\tvar spliced = [];\n\tif (array) {\n\t\twhile (a.length) {\n\t\tspliced = [...spliced, a.splice(0, size)];\n\t\t}\n\t}\n\treturn spliced;\n\t}\n\nconst Moods = () => {\n\tconst [audioFet, setAudioFet] = useState();\n\tconst [allSongs, setAllSongs] = useState();\n\tconst [toggleState, setToggleState] = useState(1);\n\tconst [mood, setMood] = useState(\"sad\");\n\tconst [songs, setSongs] = useState();\n\n\tconst [tracks, setTracks] = useState();\n\n\tvar audio_feat = JSON.parse(window.sessionStorage.getItem(\"audio_features\"));\n\tvar trackstorage = JSON.parse(window.sessionStorage.getItem(\"tracks\"));\n\n\n\tconst getTracksfromList = async (arraysplice) => {\n\n\t\tvar Tracks = {tracks: []}\n\t\n\t\tfor (var i = 0; i < arraysplice.length; i++) {\n\t\t\tconst c = await spotifyApi.getTracks(arraysplice[i].map((x) => x.id))\n\t\t\tTracks.tracks = [...Tracks.tracks, ...c.tracks]\n\t\t}\n\t\tsetTracks(Tracks)\n\t}\n\n\t// get every songs form every playlist and every saved\n\n\tconst toggleTab = (index, moods) => {\n\t\tconsole.log(audioFet);\n\t\tif (moods != mood) {\n\t\t\tsetTracks();\n\t\t}\n\n\t\tsetMood(moods);\n\t\tsetToggleState(index);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!trackstorage) {\n\t\tasync function fetchData() {\n\t\t\tvar all_songs = [];\n\t\t\tawait getplaylists([], 50, 0).then(async (response) => {\n\t\t\tconsole.log(\"Fetching all songs...\");\n\n\t\t\t\tfor await (const index of response.map((x) => x.id)) {\n\t\t\t\t\tall_songs = [...all_songs, ...(await getAllSongs(index))];\n\t\t\t\t}\n\n\t\t\t\t// instead of set state maybe import this from home\n\t\t\t\t// filter duplicates\n\t\t\t\tconst unique = [...new Set(all_songs)]\n\t\t\t\tsetAllSongs(unique);\n\t\t\t\twindow.sessionStorage.setItem(\"tracks\", JSON.stringify(all_songs));\n\t\t\t});\n\t\t}\n\t\tfetchData();\n\t\t} else {\n\t\tconsole.log(\"Fetching all songs...\");\n\t\tsetAllSongs(trackstorage);\n\t\t}\n\t}, []);\n\t//console.log(allSongs)\n\n\tuseEffect(() => {\n\t\t//console.log(allSongs)\n\t\tif (!audio_feat) {\n\t\t\tif (allSongs) {\n\t\t\t\tvar all_audio = [];\n\n\t\t\t\tconst allSongsSpliced = arraySplice(allSongs, 100);\n\n\t\t\t\tasync function get(all_audio) {\n\t\t\t\t\tfor (const index of allSongsSpliced) {\n\t\t\t\t\t\tconst c = await spotifyApi.getAudioFeaturesForTracks(index);\n\t\t\t\t\t\tall_audio = [...all_audio, ...c.audio_features];\n\t\t\t\t\t}\n\t\t\t\t\tsetAudioFet(all_audio);\n\t\t\t\t\twindow.sessionStorage.setItem(\n\t\t\t\t\t\t\"audio_features\",\n\t\t\t\t\t\tJSON.stringify(all_audio)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconsole.log(\"Fetching audio data...\");\n\t\t\t\tget(all_audio);\n\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Fetching audio data...\");\n\t\t\t\tsetAudioFet(audio_feat);\n\t\t\t}\n\t}, [allSongs]);\n\n\tuseEffect(() => {\n\t\tif (allSongs) {\n\t\tsetSongs(1);\n\t\t}\n\t}, [allSongs]);\n\n\tuseEffect(() => {\n\t\tif (audioFet) {\n\t\t// TODO ADJUST THE FILTERS\n\n\t\t\tconst audioFetFix = audioFet.filter((x) => x); // some songs have no audio features\n\t\t\tconsole.log(audioFetFix);\n\t\t\tif (mood == \"sad\") {\n\t\t\t\tconsole.log(\":(\");\n\t\t\t\tconst FilteredSplice = arraySplice(audioFetFix.filter((x) => x.valence < 0.3 && x.energy < 0.5 && x.danceability < 0.6), 50);\n\t\t\t\tconsole.log(FilteredSplice)\n\t\t\t\tif (FilteredSplice) {\n\t\t\t\t\tgetTracksfromList(FilteredSplice)\n\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No matches\")\n\t\t\t\t}\n\t\t\t\t// SET TRACKS IN THIS LOGIC\n\t\t\t} else if (mood == \"happy\") {\n\t\t\t\tconsole.log(\":)\");\n\t\t\t\tconst FilteredSplice = arraySplice( audioFetFix.filter((x) => x.tempo > 110 && x.speechiness < 0.2 && x.energy > 0.6 && x.danceability > 0.6 && x.valence > 0.6),50);\n\t\t\t\tif (FilteredSplice) {\n\t\t\t\t\tgetTracksfromList(FilteredSplice)\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No matches\")\n\t\t\t\t}\n\t\t\t} else if (mood == \"study\") {\n\t\t\t\tconsole.log(\":/\");\n\t\t\t\tconst FilteredSplice = arraySplice(audioFetFix.filter((x) =>  x.speechiness < 0.4 && x.energy < 0.55 && x.instrumentalness > 0.7), 50);\n\t\t\t\tif (FilteredSplice) {\n\t\t\t\t\tgetTracksfromList(FilteredSplice)\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No matches\")\n\t\t\t\t}\n\t\t\t} else if (mood == \"gym (mad)\") {\n\t\t\t\tconst FilteredSplice = arraySplice(audioFetFix.filter((x) => x.tempo > 130 && x.energy > 0.65 && x.acousticness < 0.2 && x.liveness > 0.1), 50);\n\t\t\t\tif (FilteredSplice) {\n\t\t\t\t\tgetTracksfromList(FilteredSplice)\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No matches\")\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t}\n\t}, [mood, audioFet]);\n\tconsole.log(tracks);\n\n\t// NOW FILTER EVERYTHING IN AUDIO FEATURES\n\n\t// get audio features of everything, then we find songs less than 30 valence and 50energy, and display top 20\n\n\t// AUDIO FEATURES HOOK\n\n\t// neeed recursion of this logic\n\n\treturn (\n\t\t<>\n\t\t<h1>\n\t\t\t{\" \"}\n\t\t\tGather all the songs from all your playlists and find the songs that match your current mood\n\t\t</h1>\n\t\t<button> Get All Playlists</button>\n\t\t<button> Get Only Your Playlists</button>\n\t\t<div>\n\t\t\t{songs ? (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h2>Songs Discovered: {audioFet ? audioFet.length : <>0</>}</h2>\n\t\t\t\t<div className=\"bloc-tabs\">\n\t\t\t\t<button\n\t\t\t\t\tclassName={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\t\tonClick={() => toggleTab(1, \"sad\")}\n\t\t\t\t>\n\t\t\t\t\tSad\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\t\tonClick={() => toggleTab(2, \"happy\")}\n\t\t\t\t>\n\t\t\t\t\tHappy\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\t\tonClick={() => toggleTab(3, \"study\")}\n\t\t\t\t>\n\t\t\t\t\tStudy\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={toggleState === 4 ? \"tabs active-tabs\" : \"tabs\"}\n\t\t\t\t\tonClick={() => toggleTab(4, \"gym (mad)\")}\n\t\t\t\t>\n\t\t\t\t\tGym >:(\n\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t) : (\n\t\t\t<b>Fetching all Songs....</b>\n\t\t\t)}\n\t\t</div>\n\t\t\t\t<p>Songs Found: {tracks? <>{tracks.tracks.length}</> : 0} </p>\n\t\t{audioFet ? (\n\t\t\t<div className=\"content-tabs\">\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\ttoggleState === 1 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{tracks ? (\n\t\t\t\t<>\n\t\t\t\t\t{tracks.tracks.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.tracks.indexOf(track)} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t<p>Loading Sad songs :(</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\ttoggleState === 2 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{tracks ? (\n\t\t\t\t<>\n\t\t\t\t\t{tracks.tracks.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track}  index={tracks.tracks.indexOf(track)} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t<p>Loading Happy Songs :D</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\ttoggleState === 3 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{tracks ? (\n\t\t\t\t<>\n\t\t\t\t\t{tracks.tracks.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.tracks.indexOf(track)} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading Study Songs :/</p>\n\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\ttoggleState === 4 ? \"content  active-content\" : \"content\"\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{tracks ? (\n\t\t\t\t<>\n\t\t\t\t\t{tracks.tracks.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track} index={tracks.tracks.indexOf(track)} />\n\t\t\t\t\t))}\n\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Loading Gym Songs >:(</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t</div>\n\t\t) : (\n\t\t\t<b>Fetching Audio Data...</b>\n\t\t)}\n\t\t</>\n\t\t/* {tracks.items.map((track, key) => (\n\t\t\t\t\t<TrackInfo key={key} track={track}*/\n\t);\n};\n\nexport default Moods;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { spotifyApi, getAccessToken } from \"../components/spotifyAPI\";\nimport format from \"date-fns/format\";\nimport { millisToMinutesAndSeconds } from \"../components/functions\";\n\nconst TableItem = (item) => (\n  <tr key={item.played_at}>\n    <td>\n      <a href={item.track.uri} className=\"row-link\">\n        {millisToMinutesAndSeconds(item.track.duration_ms)}\n      </a>\n    </td>\n\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.name}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.artists.map((e) => e.name).join(\", \")}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {format(Date.parse(item.played_at), \"dd/MM/yyyy, hh:mma\")}\n      </a>\n    </td>\n  </tr>\n);\n\nconst RecentTracks = () => {\n  const [RecentlyPlayed, setRecentlyPlayed] = useState();\n\n  // variable limit? with useeffect to load more maybe on scroll down, limit will change\n  useEffect(() => {\n    spotifyApi\n      .getMyRecentlyPlayedTracks({\n        limit: 50,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setRecentlyPlayed({\n            items: response.items,\n          });\n        }\n      })\n      .catch(() => {\n        getAccessToken();\n      });\n  }, []);\n  console.log(RecentlyPlayed);\n\n  return (\n    <div>\n      {RecentlyPlayed ? (\n        <div className=\"recently-played\">\n          <h2>Recently played tracks</h2>\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Duration</th>\n                <th>Track</th>\n                <th>Artist(s)</th>\n                <th>Played at</th>\n              </tr>\n            </thead>\n            <tbody>{RecentlyPlayed.items.map((item) => TableItem(item))}</tbody>\n          </table>\n        </div>\n      ) : (\n        <b>LOADING</b>\n      )}\n    </div>\n  );\n};\nexport default RecentTracks;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { LogoutButton } from \"../components/functions\";\nimport Navbar from \"../components/Navbar\";\nimport TopTracks from \"./TopTracks\";\nimport Moods from \"./Moods\";\nimport RecentTracks from \"./RecentTracks\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\n\n\n\nexport default function Dashboard() {\n// TODO: This takes too many requests, remove for now\nconst [isPlaying, setIsPlaying] = useState(false);\n// Note the spotify web player SDK is in beta so performance is janky\n\nuseEffect(() => {\n\tconst interval = setInterval( async () => {\n\tspotifyApi.getMyCurrentPlaybackState().then((response) => {\n\t\tif (response) {\n\t\tif (response.is_playing) {\n\t\t\tsetIsPlaying(true);\n\t\t}\n\t\t} else if (!response) {\n\t\tsetIsPlaying(false);\n\t\t}\n\t})\n\t.catch(() => {\n\t\tgetAccessToken()\n\t});\n\t}, 10000);\n\treturn () => clearInterval(interval);\n}, [isPlaying]);\n\n//return should return, getTOPTRACKS, make playlist\n// DashBoard should tell us our favourite genre based on our top artist\n\treturn (\n\t\t<BrowserRouter>\n\t\t<div /* will make a header bar FOR ALL OUR BROWSER ROUTES*/>\n\t\t\t<Navbar />\n\n\t\t\t<Switch>\n\t\t\t<Route path=\"/RecentTracks\">\n\t\t\t\t<RecentTracks />\n\t\t\t</Route>\n\t\t\t<Route path=\"/logout\">\n\t\t\t\t<LogoutButton />\n\t\t\t</Route>\n\t\t\t<Route path=\"/TopTracks\">\n\t\t\t\t<TopTracks />\n\t\t\t</Route>\n\t\t\t<Route path=\"/Moods\">\n\t\t\t\t<Moods />\n\t\t\t</Route>\n\t\t\t<Route path=\"/\">\n\t\t\t\t<h1>Welcome to Spoti-FYI</h1>\n\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t{isPlaying ? (\n\t\t\t<div className=\"player\">\n\t\t\t\t<b>Currently Playing</b>\n\t\t\t\t<SpotifyPlayer\n\t\t\t\ttoken={token}\n\t\t\t\tsyncExternalDevice={true}\n\t\t\t\tsyncExternalDeviceInterval={5}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t) : (\n\t\t\t<div className=\"player\">\n\t\t\t\t<b>Currently Not Playing Anything </b>\n\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n// ****** NESTED ROUTING\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Dashboard from \"./Pages/Dashboard\";\n\nimport { token } from \"./components/spotifyAPI\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">{token ? <Dashboard/> : <Login />}</div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}