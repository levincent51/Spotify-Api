{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport './Dashboard.css';\n/*\nconst TableItem = (item, index) => (\n    <tr key={item.played_at}>\n      <td><a href={item.track.uri} class=\"row-link\">{item.track.name}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{item.track.artists.map(e => e.name).join(\", \")}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma') }</a></td>\n    </tr>\n);\n\n\nconst RecentTracks = () => {\n\n    const [RecentlyPlayed, setRecentlyPlayed] = useState()\n\n    // variable limit? with useeffect to load more\n    const getRecentlyPlayed = () => {\n  \n      spotifyApi.getMyRecentlyPlayedTracks({\n        limit : 50,\n      }).then((response) => {\n        if (response) {\n          console.log(response)\n          setRecentlyPlayed( {\n            items: response.items\n          });   \n        } \n      })\n\n    }\n    console.log(RecentlyPlayed)\n\n    getRecentlyPlayed()\n\nreturn (\n        <>\n        <div className=\"recently-played\">\n        <h2>Recently played tracks</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Track</th>\n              <th>Artist(s)</th>\n              <th>Played at</th>\n            </tr>\n          </thead>\n          <tbody>{RecentlyPlayed.items.map((item, index) => TableItem(item, index))}</tbody>\n        </table>\n        </div>\n        </>\n    )\n}\nexport default RecentTracks;*/","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js"],"names":["React","Component","useState","useEffect","format","spotifyApi"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,iBAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport format from 'date-fns/format';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport './Dashboard.css'\n/*\nconst TableItem = (item, index) => (\n    <tr key={item.played_at}>\n      <td><a href={item.track.uri} class=\"row-link\">{item.track.name}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{item.track.artists.map(e => e.name).join(\", \")}</a></td>\n      <td><a href={item.track.uri} tabindex=\"-1\" class=\"row-link\">{format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma') }</a></td>\n    </tr>\n);\n\n\nconst RecentTracks = () => {\n\n    const [RecentlyPlayed, setRecentlyPlayed] = useState()\n\n    // variable limit? with useeffect to load more\n    const getRecentlyPlayed = () => {\n  \n      spotifyApi.getMyRecentlyPlayedTracks({\n        limit : 50,\n      }).then((response) => {\n        if (response) {\n          console.log(response)\n          setRecentlyPlayed( {\n            items: response.items\n          });   \n        } \n      })\n\n    }\n    console.log(RecentlyPlayed)\n\n    getRecentlyPlayed()\n\nreturn (\n        <>\n        <div className=\"recently-played\">\n        <h2>Recently played tracks</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Track</th>\n              <th>Artist(s)</th>\n              <th>Played at</th>\n            </tr>\n          </thead>\n          <tbody>{RecentlyPlayed.items.map((item, index) => TableItem(item, index))}</tbody>\n        </table>\n        </div>\n        </>\n    )\n}\nexport default RecentTracks;*/"]},"metadata":{},"sourceType":"module"}