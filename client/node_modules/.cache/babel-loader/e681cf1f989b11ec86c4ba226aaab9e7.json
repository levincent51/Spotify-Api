{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/Dashboard.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport format from 'date-fns/format';\nimport { millisToMinutesAndSeconds } from '../components/functions';\nimport './Dashboard.css';\nimport RecentTracks from './RecentTracks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableItem = (item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      className: \"row-link\",\n      children: millisToMinutesAndSeconds(item.track.duration_ms)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.artists.map(e => e.name).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, item.played_at, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = TableItem;\nexport default function Dashboard() {\n  /*\n    // THIS IS the get recentlyplayed component\n    const [RecentlyPlayed, setRecentlyPlayed] = useState()\n  \n    // variable limit? with useeffect to load more\n    const getRecentlyPlayed = () => {\n  \n      spotifyApi.getMyRecentlyPlayedTracks({\n        limit : 50,\n      }).then((response) => {\n        if (response) {\n          console.log(response)\n          setRecentlyPlayed( {\n            items: response.items\n          });   \n        } \n      })\n  \n    }\n    console.log(RecentlyPlayed)\n  \n    const RecentlyPlayedDisplay = () => (\n        <>\n        <div className=\"recently-played\">\n        <h2>Recently played tracks</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Duration</th>\n              <th>Song</th>\n              <th>Artist(s)</th>\n              <th>Played</th>\n            </tr>\n          </thead>\n          <tbody>{RecentlyPlayed.items.map((item, index) => TableItem(item, index))}</tbody>\n        </table>\n        </div>\n        </>\n    )*/\n  // get Top tracks, useEffect hook to get either 4weeks, 6 months or all time\n  //return should return, getTOPTRACKS, make playlist\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/recentlyplayed\",\n            children: \"RecentlyPlayed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/recentlyplayed\",\n          children: /*#__PURE__*/_jsxDEV(RecentTracks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n} // ****** NESTED ROUTING\n\n_c2 = Dashboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableItem\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/Dashboard.js"],"names":["React","Component","useState","useEffect","BrowserRouter","Route","Switch","Link","logout","spotifyApi","format","millisToMinutesAndSeconds","RecentTracks","TableItem","item","index","track","uri","duration_ms","name","artists","map","e","join","Date","parse","played_at","Dashboard"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch,Link } from 'react-router-dom'\nimport { logout } from '../components/functions';\nimport { spotifyApi } from '../components/spotifyAPI';\nimport format from 'date-fns/format';\nimport { millisToMinutesAndSeconds } from '../components/functions';\nimport './Dashboard.css'\nimport RecentTracks from './RecentTracks'\n\nconst TableItem = (item, index) => (\n  <tr key={item.played_at}>\n    <td><a href={item.track.uri} className=\"row-link\">{millisToMinutesAndSeconds(item.track.duration_ms)}</a></td>\n\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{item.track.name}</a></td>\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{item.track.artists.map(e => e.name).join(\", \")}</a></td>\n    <td><a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">{format(Date.parse(item.played_at), 'dd/MM/yyyy, hh:mma') }</a></td>\n  </tr>\n);\n\n\nexport default function Dashboard() {\n\n/*\n  // THIS IS the get recentlyplayed component\n  const [RecentlyPlayed, setRecentlyPlayed] = useState()\n\n  // variable limit? with useeffect to load more\n  const getRecentlyPlayed = () => {\n\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit : 50,\n    }).then((response) => {\n      if (response) {\n        console.log(response)\n        setRecentlyPlayed( {\n          items: response.items\n        });   \n      } \n    })\n\n  }\n  console.log(RecentlyPlayed)\n\n  const RecentlyPlayedDisplay = () => (\n      <>\n      <div className=\"recently-played\">\n      <h2>Recently played tracks</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Duration</th>\n            <th>Song</th>\n            <th>Artist(s)</th>\n            <th>Played</th>\n          </tr>\n        </thead>\n        <tbody>{RecentlyPlayed.items.map((item, index) => TableItem(item, index))}</tbody>\n      </table>\n      </div>\n      </>\n  )*/\n\n\n    // get Top tracks, useEffect hook to get either 4weeks, 6 months or all time\n\n  //return should return, getTOPTRACKS, make playlist\n\n  return (\n    <BrowserRouter>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/recentlyplayed\">RecentlyPlayed</Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route path=\"/recentlyplayed\">\n            <RecentTracks />\n          </Route>\n  \n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n// ****** NESTED ROUTING\n\n"]},"metadata":{},"sourceType":"module"}