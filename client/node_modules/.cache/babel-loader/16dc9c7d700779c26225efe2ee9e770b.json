{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\n\nfunction App() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [nowPlaying, setNowPlaying] = useState({\n    name: 'Not Checked',\n    albumArt: ''\n  });\n  const [params, setParams] = useState({});\n  useEffect(() => {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    if (hashParams) setParams(hashParams);\n  }, [params]);\n  const token = params.access_token;\n\n  if (token) {\n    setLoggedIn(true);\n  }\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      if (response) {\n        setNowPlaying({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      } else {\n        alert(\"YOU ARE not playing anything\");\n      }\n\n      ;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8888\",\n      children: \" Login to Spotify \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Now Playing: \", nowPlaying.name, \"Logged in: \", loggedIn.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nowPlaying.albumArt,\n        style: {\n          height: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getNowPlaying(),\n      children: \"Check Now Playing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n/*\n\nclass App extends Component {\n  constructor(){\n    // this constructs object\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      // THIS IS THE OBJECT COMPONENTS, and their properties\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n    }\n  }\n\n  \n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n  \n    spotifyApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      if (response) {\n        this.setState({\n        nowPlaying: { \n            name: response.item.name, \n            albumArt: response.item.album.images[0].url\n          }\n        })\n      } else {\n\n        alert(\"YOU ARE not playing anything\")\n        return\n      }\n      ;\n    })\n    \n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n          Logged in: {this.state.loggedIn.toString()}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n      </div>\n    );\n  }\n}\n*/\n\n\n_s(App, \"lTSQPElsqOS87eTHXldkavTXYso=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/App.js"],"names":["React","Component","useState","useEffect","SpotifyWebApi","spotifyApi","App","loggedIn","setLoggedIn","nowPlaying","setNowPlaying","name","albumArt","params","setParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","token","access_token","getNowPlaying","getMyCurrentPlaybackState","then","response","item","album","images","url","alert","toString","height"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction App() {\n  \n  const [loggedIn, setLoggedIn] = useState(false)\n  const [nowPlaying, setNowPlaying] = useState({ name: 'Not Checked', albumArt: ''})\n  const [params, setParams] = useState({});\n\n  useEffect(() => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n\n\n    if (hashParams) setParams(hashParams)\n    \n  }, [params])\n\n  const token = params.access_token\n\n  if (token) {\n    setLoggedIn(true)\n  }\n\n\n  const getNowPlaying = () => {\n    spotifyApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      if (response) {\n        setNowPlaying({\n        nowPlaying: { \n            name: response.item.name, \n            albumArt: response.item.album.images[0].url\n          }\n        })\n      } else {\n\n        alert(\"YOU ARE not playing anything\")\n      }\n      ;\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <a href='http://localhost:8888' > Login to Spotify </a>\n      <div>\n        Now Playing: { nowPlaying.name }\n        Logged in: {loggedIn.toString()}\n      </div>\n      <div>\n        <img src={nowPlaying.albumArt} style={{ height: 150 }}/>\n      </div>\n      { loggedIn &&\n        <button onClick={() => getNowPlaying()}>\n          Check Now Playing\n        </button>\n      }\n    </div>\n  )\n}\n\n/*\n\nclass App extends Component {\n  constructor(){\n    // this constructs object\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      // THIS IS THE OBJECT COMPONENTS, and their properties\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n    }\n  }\n\n  \n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n  \n    spotifyApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      if (response) {\n        this.setState({\n        nowPlaying: { \n            name: response.item.name, \n            albumArt: response.item.album.images[0].url\n          }\n        })\n      } else {\n\n        alert(\"YOU ARE not playing anything\")\n        return\n      }\n      ;\n    })\n    \n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n          Logged in: {this.state.loggedIn.toString()}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n      </div>\n    );\n  }\n}\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}