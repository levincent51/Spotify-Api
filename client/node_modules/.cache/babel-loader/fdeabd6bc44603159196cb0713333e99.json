{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TopTracks = () => {\n  _s();\n\n  const [toggleState, setToggleState] = useState(1);\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = newTimeRange => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n\n  useEffect(() => {\n    spotifyApi.getMyTopTracks({\n      limit: 50,\n      time_range: timeRange\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setTracks({\n          items: response.items\n        });\n      }\n    });\n  }, [timeRange]);\n  console.log(tracks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bloc-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 1 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(1, \"short_term\"),\n          children: \"4 weeks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 2 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(2, \"medium_term\"),\n          children: \"6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: toggleState === 3 ? \"tabs active-tabs\" : \"tabs\",\n          onClick: () => toggleTab(3, \"long_term\"),\n          children: \"All time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), tracks ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 1 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 2 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 3 ? \"content  active-content\" : \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), tracks.items.map((track, key) => /*#__PURE__*/_jsxDEV(TrackInfo, {\n            track: track\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"LOADING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopTracks, \"/db5M7YYgxK15qPJJMLSgh/7obc=\");\n\n_c = TopTracks;\nexport default TopTracks;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/TopTracks.js"],"names":["React","useState","useEffect","spotifyApi","TrackInfo","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","changeTerm","newTimeRange","toggleTab","index","time_range","getMyTopTracks","limit","then","response","console","log","items","map","track","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = (newTimeRange) => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n  useEffect(() => {\n    spotifyApi\n      .getMyTopTracks({\n        limit: 50,\n        time_range: timeRange,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setTracks({\n            items: response.items,\n          });\n        }\n      });\n  }, [timeRange]);\n\n  console.log(tracks);\n\n  return (\n    <div>\n      \n        <div className=\"container\">\n          <div className=\"bloc-tabs\">\n            <button\n              className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n              onClick={() => toggleTab(1, \"short_term\")}\n            >\n              4 weeks\n            </button>\n            <button\n              className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n              onClick={() => toggleTab(2, \"medium_term\")}\n            >\n              6 months\n            </button>\n            <button\n              className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n              onClick={() => toggleTab(3, \"long_term\")}\n            >\n              All time\n            </button>\n          </div>\n          {tracks ? (\n          <div className=\"content-tabs\">\n            <div\n              className={\n                toggleState === 1 ? \"content  active-content\" : \"content\"\n              }\n            >\n              <h2>Top Tracks</h2>\n              <hr />\n\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n\n            <div\n              className={\n                toggleState === 2 ? \"content  active-content\" : \"content\"\n              }\n            >\n              <h2>Top Tracks</h2>\n              <hr />\n\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n\n            <div\n              className={\n                toggleState === 3 ? \"content  active-content\" : \"content\"\n              }\n            >\n              <h2>Top Tracks</h2>\n              <hr />\n\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n          </div>): (\n        <b>LOADING</b>)}\n        </div>\n       \n      \n    </div>\n  );\n};\n\nexport default TopTracks;\n"]},"metadata":{},"sourceType":"module"}