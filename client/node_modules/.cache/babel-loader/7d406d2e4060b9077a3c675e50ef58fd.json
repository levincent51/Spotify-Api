{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport format from \"date-fns/format\";\nimport { millisToMinutesAndSeconds } from \"../components/functions\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TableItem = (item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      className: \"row-link\",\n      children: millisToMinutesAndSeconds(item.track.duration_ms)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: item.track.artists.map(e => e.name).join(\", \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.track.uri,\n      tabIndex: \"-1\",\n      className: \"row-link\",\n      children: format(Date.parse(item.played_at), \"dd/MM/yyyy, hh:mma\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)]\n}, item.played_at, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c = TableItem;\n\nconst RecentTracks = () => {\n  _s();\n\n  const [RecentlyPlayed, setRecentlyPlayed] = useState(); // variable limit? with useeffect to load more maybe on scroll down, limit will change\n\n  useEffect(() => {\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 50\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setRecentlyPlayed({\n          items: response.items\n        });\n      }\n    });\n  }, []);\n  console.log(RecentlyPlayed);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: RecentlyPlayed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-played\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recently played tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artist(s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Played at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: RecentlyPlayed.items.map((item, index) => TableItem(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecentTracks, \"RocAk3aT3JYSa11NxM6eCpq6jXc=\");\n\n_c2 = RecentTracks;\nexport default RecentTracks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableItem\");\n$RefreshReg$(_c2, \"RecentTracks\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/Pages/RecentTracks.js"],"names":["React","Component","useState","useEffect","spotifyApi","format","millisToMinutesAndSeconds","TableItem","item","index","track","uri","duration_ms","name","artists","map","e","join","Date","parse","played_at","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getMyRecentlyPlayedTracks","limit","then","response","console","log","items"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport format from \"date-fns/format\";\nimport { millisToMinutesAndSeconds } from \"../components/functions\";\nimport \"./Dashboard.css\";\n\nconst TableItem = (item, index) => (\n  <tr key={item.played_at}>\n    <td>\n      <a href={item.track.uri} className=\"row-link\">\n        {millisToMinutesAndSeconds(item.track.duration_ms)}\n      </a>\n    </td>\n\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.name}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.artists.map((e) => e.name).join(\", \")}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {format(Date.parse(item.played_at), \"dd/MM/yyyy, hh:mma\")}\n      </a>\n    </td>\n  </tr>\n);\n\nconst RecentTracks = () => {\n  const [RecentlyPlayed, setRecentlyPlayed] = useState();\n\n  // variable limit? with useeffect to load more maybe on scroll down, limit will change\n  useEffect(() => {\n    spotifyApi\n      .getMyRecentlyPlayedTracks({\n        limit: 50,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setRecentlyPlayed({\n            items: response.items,\n          });\n        }\n      });\n  }, []);\n  console.log(RecentlyPlayed);\n\n  return (\n    <>\n      {RecentlyPlayed ? (\n        <div className=\"recently-played\">\n          <h2>Recently played tracks</h2>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Duration</th>\n                <th>Track</th>\n                <th>Artist(s)</th>\n                <th>Played at</th>\n              </tr>\n            </thead>\n            <tbody>\n              {RecentlyPlayed.items.map((item, index) =>\n                TableItem(item, index)\n              )}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <b>LOADING</b>\n      )}\n    </>\n  );\n};\nexport default RecentTracks;\n"]},"metadata":{},"sourceType":"module"}