{"ast":null,"code":"import axios from \"axios\";\nimport { getHashParams, getObject, setObject } from \"./functions\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nconst EXPIRATION_TIME = 3600000; // 1 hour\n\nconst SERVER = \"http://localhost:8888/\"; // or https://react-express-spotify.herokuapp.com http://localhost:8888\n//REFRESH ACCESS TOKEN EVERY 1 HOUR\n// REFRESH_URI\n// USES JMPerez's spotify-web-api-js\n\nexport const spotifyApi = new SpotifyWebApi(); // constantly refreshing\n\nexport const refreshAccessToken = async () => {\n  // take refresh token from local storage\n  const refresh_token = window.localStorage.getItem(\"refresh_token\");\n  axios.get(SERVER + \"refresh_token\", {\n    params: {\n      refresh_token: refresh_token\n    }\n  }).then(res => {\n    const access_token = res.data.access_token;\n    console.log(\"New acccess_token\", access_token);\n    window.localStorage.setItem(\"access_token\", access_token);\n    window.localStorage.setItem(\"token_timestamp\", Date.now());\n    window.location.reload();\n  }).catch(e => console.log(e));\n}; // GET TOKEN, REFRESH IF REQUIRED\n\nexport const getAccessToken = () => {\n  // Takes token from our url\n  const {\n    error,\n    access_token,\n    refresh_token\n  } = getHashParams(); //  token invalid freom timeout\n\n  if (error) {\n    console.log(error);\n    refreshAccessToken();\n  }\n\n  if (access_token && refresh_token) {\n    window.location.replace(\"/\");\n    window.localStorage.setItem(\"access_token\", access_token);\n    window.localStorage.setItem(\"refresh_token\", refresh_token);\n    window.localStorage.setItem(\"token_timestamp\", Date.now());\n    return access_token;\n  } // THIS WILL AUTO REFRESH OUR TOKEN BASED ON EXPIRY TIME\n\n\n  const tokenExpiry = window.localStorage.getItem(\"token_timestamp\");\n\n  if (tokenExpiry && tokenExpiry !== \"undefined\" && Date.now() - tokenExpiry > EXPIRATION_TIME) {\n    console.log(\"Token expired, refreshing token\");\n    refreshAccessToken();\n  }\n\n  const local_access_token = window.localStorage.getItem(\"access_token\");\n  return local_access_token;\n}; // SET OUR TOKEN with our spotify-web-api-js\n\nexport const token = getAccessToken();\nspotifyApi.setAccessToken(token); // SPOTIFY API CALLS","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/components/spotifyAPI.js"],"names":["axios","getHashParams","getObject","setObject","SpotifyWebApi","EXPIRATION_TIME","SERVER","spotifyApi","refreshAccessToken","refresh_token","window","localStorage","getItem","get","params","then","res","access_token","data","console","log","setItem","Date","now","location","reload","catch","e","getAccessToken","error","replace","tokenExpiry","local_access_token","token","setAccessToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,SAAnC,QAAoD,aAApD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,MAAMC,eAAe,GAAG,OAAxB,C,CAAiC;;AACjC,MAAMC,MAAM,GAAG,wBAAf,C,CAAyC;AACzC;AACA;AAEA;;AAEA,OAAO,MAAMC,UAAU,GAAG,IAAIH,aAAJ,EAAnB,C,CAEP;;AACA,OAAO,MAAMI,kBAAkB,GAAG,YAAY;AAC9C;AACC,QAAMC,aAAa,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CAAtB;AACAZ,EAAAA,KAAK,CACHa,GADF,CACMP,MAAM,GAAG,eADf,EACgC;AAC/BQ,IAAAA,MAAM,EAAE;AACPL,MAAAA,aAAa,EAAEA;AADR;AADuB,GADhC,EAMEM,IANF,CAMQC,GAAD,IAAS;AACf,UAAMC,YAAY,GAAGD,GAAG,CAACE,IAAJ,CAASD,YAA9B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,YAAjC;AACAP,IAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,cAA5B,EAA4CJ,YAA5C;AACAP,IAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,iBAA5B,EAA+CC,IAAI,CAACC,GAAL,EAA/C;AACAb,IAAAA,MAAM,CAACc,QAAP,CAAgBC,MAAhB;AACC,GAZF,EAaEC,KAbF,CAaSC,CAAD,IAAOR,OAAO,CAACC,GAAR,CAAYO,CAAZ,CAbf;AAcA,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAM;AACpC;AAEC,QAAM;AAAEC,IAAAA,KAAF;AAASZ,IAAAA,YAAT;AAAuBR,IAAAA;AAAvB,MAAyCR,aAAa,EAA5D,CAHmC,CAKnC;;AACA,MAAI4B,KAAJ,EAAW;AACVV,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACArB,IAAAA,kBAAkB;AAClB;;AAED,MAAIS,YAAY,IAAIR,aAApB,EAAmC;AAClCC,IAAAA,MAAM,CAACc,QAAP,CAAgBM,OAAhB,CAAwB,GAAxB;AACApB,IAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,cAA5B,EAA4CJ,YAA5C;AACAP,IAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,eAA5B,EAA6CZ,aAA7C;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,iBAA5B,EAA+CC,IAAI,CAACC,GAAL,EAA/C;AAEA,WAAON,YAAP;AACA,GAlBkC,CAmBnC;;;AACA,QAAMc,WAAW,GAAGrB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAApB;;AAEA,MACCmB,WAAW,IACXA,WAAW,KAAK,WADhB,IAEAT,IAAI,CAACC,GAAL,KAAaQ,WAAb,GAA2B1B,eAH5B,EAIE;AACDc,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAZ,IAAAA,kBAAkB;AAClB;;AAED,QAAMwB,kBAAkB,GAAGtB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAA3B;AAEA,SAAOoB,kBAAP;AACA,CAlCM,C,CAoCP;;AACA,OAAO,MAAMC,KAAK,GAAGL,cAAc,EAA5B;AAEPrB,UAAU,CAAC2B,cAAX,CAA0BD,KAA1B,E,CAGA","sourcesContent":["import axios from \"axios\";\nimport { getHashParams, getObject, setObject } from \"./functions\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst EXPIRATION_TIME = 3600000; // 1 hour\nconst SERVER = \"http://localhost:8888/\"; // or https://react-express-spotify.herokuapp.com http://localhost:8888\n//REFRESH ACCESS TOKEN EVERY 1 HOUR\n// REFRESH_URI\n\n// USES JMPerez's spotify-web-api-js\n\nexport const spotifyApi = new SpotifyWebApi();\n\n// constantly refreshing\nexport const refreshAccessToken = async () => {\n// take refresh token from local storage\n\tconst refresh_token = window.localStorage.getItem(\"refresh_token\");\n\taxios\n\t\t.get(SERVER + \"refresh_token\", {\n\t\tparams: {\n\t\t\trefresh_token: refresh_token,\n\t\t},\n\t\t})\n\t\t.then((res) => {\n\t\tconst access_token = res.data.access_token;\n\t\tconsole.log(\"New acccess_token\", access_token);\n\t\twindow.localStorage.setItem(\"access_token\", access_token);\n\t\twindow.localStorage.setItem(\"token_timestamp\", Date.now());\n\t\twindow.location.reload();\n\t\t})\n\t\t.catch((e) => console.log(e));\n};\n\n// GET TOKEN, REFRESH IF REQUIRED\nexport const getAccessToken = () => {\n// Takes token from our url\n\n\tconst { error, access_token, refresh_token } = getHashParams();\n\n\t//  token invalid freom timeout\n\tif (error) {\n\t\tconsole.log(error);\n\t\trefreshAccessToken();\n\t}\n\n\tif (access_token && refresh_token) {\n\t\twindow.location.replace(\"/\");\n\t\twindow.localStorage.setItem(\"access_token\", access_token);\n\t\twindow.localStorage.setItem(\"refresh_token\", refresh_token);\n\t\twindow.localStorage.setItem(\"token_timestamp\", Date.now());\n\n\t\treturn access_token;\n\t}\n\t// THIS WILL AUTO REFRESH OUR TOKEN BASED ON EXPIRY TIME\n\tconst tokenExpiry = window.localStorage.getItem(\"token_timestamp\");\n\n\tif (\n\t\ttokenExpiry &&\n\t\ttokenExpiry !== \"undefined\" &&\n\t\tDate.now() - tokenExpiry > EXPIRATION_TIME\n\t) {\n\t\tconsole.log(\"Token expired, refreshing token\");\n\t\trefreshAccessToken();\n\t}\n\n\tconst local_access_token = window.localStorage.getItem(\"access_token\");\n\n\treturn local_access_token;\n};\n\n// SET OUR TOKEN with our spotify-web-api-js\nexport const token = getAccessToken();\n\nspotifyApi.setAccessToken(token);\n\n\n// SPOTIFY API CALLS \n"]},"metadata":{},"sourceType":"module"}