{"ast":null,"code":"import _slicedToArray from\"/Users/macuser/project/spotify-api-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from\"react\";import{spotifyApi,token,getAccessToken}from\"../components/spotifyAPI\";import format from\"date-fns/format\";import{millisToMinutesAndSeconds}from\"../components/functions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TableItem=function TableItem(item){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:item.track.uri,className:\"row-link\",children:millisToMinutesAndSeconds(item.track.duration_ms)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:item.track.uri,tabIndex:\"-1\",className:\"row-link\",children:item.track.name})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:item.track.uri,tabIndex:\"-1\",className:\"row-link\",children:item.track.artists.map(function(e){return e.name;}).join(\", \")})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:item.track.uri,tabIndex:\"-1\",className:\"row-link\",children:format(Date.parse(item.played_at),\"dd/MM/yyyy, hh:mma\")})})]},item.played_at);};var RecentTracks=function RecentTracks(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),RecentlyPlayed=_useState2[0],setRecentlyPlayed=_useState2[1];// variable limit? with useeffect to load more maybe on scroll down, limit will change\nuseEffect(function(){spotifyApi.getMyRecentlyPlayedTracks({limit:50}).then(function(response){if(response){console.log(response);setRecentlyPlayed({items:response.items});}}).catch(function(){token=getAccessToken();});;},[]);console.log(RecentlyPlayed);return/*#__PURE__*/_jsx(\"div\",{children:RecentlyPlayed?/*#__PURE__*/_jsxs(\"div\",{className:\"recently-played\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recently played tracks\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Duration\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Track\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Artist(s)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Played at\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:RecentlyPlayed.items.map(function(item){return TableItem(item);})})]})]}):/*#__PURE__*/_jsx(\"b\",{children:\"LOADING\"})});};export default RecentTracks;","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/RecentTracks.js"],"names":["React","Component","useState","useEffect","spotifyApi","token","getAccessToken","format","millisToMinutesAndSeconds","TableItem","item","track","uri","duration_ms","name","artists","map","e","join","Date","parse","played_at","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getMyRecentlyPlayedTracks","limit","then","response","console","log","items","catch"],"mappings":"oIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,OAASC,UAAT,CAAqBC,KAArB,CAA4BC,cAA5B,KAAkD,0BAAlD,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,yBAAT,KAA0C,yBAA1C,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,qBAChB,mCACE,iCACE,UAAG,IAAI,CAAEA,IAAI,CAACC,KAAL,CAAWC,GAApB,CAAyB,SAAS,CAAC,UAAnC,UACGJ,yBAAyB,CAACE,IAAI,CAACC,KAAL,CAAWE,WAAZ,CAD5B,EADF,EADF,cAOE,iCACE,UAAG,IAAI,CAAEH,IAAI,CAACC,KAAL,CAAWC,GAApB,CAAyB,QAAQ,CAAC,IAAlC,CAAuC,SAAS,CAAC,UAAjD,UACGF,IAAI,CAACC,KAAL,CAAWG,IADd,EADF,EAPF,cAYE,iCACE,UAAG,IAAI,CAAEJ,IAAI,CAACC,KAAL,CAAWC,GAApB,CAAyB,QAAQ,CAAC,IAAlC,CAAuC,SAAS,CAAC,UAAjD,UACGF,IAAI,CAACC,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACH,IAAT,EAAvB,EAAsCI,IAAtC,CAA2C,IAA3C,CADH,EADF,EAZF,cAiBE,iCACE,UAAG,IAAI,CAAER,IAAI,CAACC,KAAL,CAAWC,GAApB,CAAyB,QAAQ,CAAC,IAAlC,CAAuC,SAAS,CAAC,UAAjD,UACGL,MAAM,CAACY,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACW,SAAhB,CAAD,CAA6B,oBAA7B,CADT,EADF,EAjBF,GAASX,IAAI,CAACW,SAAd,CADgB,EAAlB,CA0BA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,cAA4CpB,QAAQ,EAApD,wCAAOqB,cAAP,eAAuBC,iBAAvB,eAEA;AACArB,SAAS,CAAC,UAAM,CACdC,UAAU,CACPqB,yBADH,CAC6B,CACzBC,KAAK,CAAE,EADkB,CAD7B,EAIGC,IAJH,CAIQ,SAACC,QAAD,CAAc,CAClB,GAAIA,QAAJ,CAAc,CACZC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAJ,iBAAiB,CAAC,CAChBO,KAAK,CAAEH,QAAQ,CAACG,KADA,CAAD,CAAjB,CAGD,CACF,CAXH,EAYGC,KAZH,CAYS,UAAM,CACX3B,KAAK,CAAGC,cAAc,EAAtB,CACD,CAdH,EAcK,CACN,CAhBQ,CAgBN,EAhBM,CAAT,CAiBAuB,OAAO,CAACC,GAAR,CAAYP,cAAZ,EAEA,mBACE,qBACGA,cAAc,cACb,aAAK,SAAS,CAAC,iBAAf,wBACE,8CADF,cAGE,eAAO,SAAS,CAAC,OAAjB,wBACE,oCACE,mCACE,gCADF,cAEE,6BAFF,cAGE,iCAHF,cAIE,iCAJF,GADF,EADF,cASE,uBACGA,cAAc,CAACQ,KAAf,CAAqBf,GAArB,CAAyB,SAACN,IAAD,QACxBD,CAAAA,SAAS,CAACC,IAAD,CADe,EAAzB,CADH,EATF,GAHF,GADa,cAqBb,8BAtBJ,EADF,CA2BD,CAlDD,CAmDA,cAAeY,CAAAA,YAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { spotifyApi, token, getAccessToken } from \"../components/spotifyAPI\";\nimport format from \"date-fns/format\";\nimport { millisToMinutesAndSeconds } from \"../components/functions\";\n\nconst TableItem = (item) => (\n  <tr key={item.played_at}>\n    <td>\n      <a href={item.track.uri} className=\"row-link\">\n        {millisToMinutesAndSeconds(item.track.duration_ms)}\n      </a>\n    </td>\n\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.name}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.artists.map((e) => e.name).join(\", \")}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {format(Date.parse(item.played_at), \"dd/MM/yyyy, hh:mma\")}\n      </a>\n    </td>\n  </tr>\n);\n\nconst RecentTracks = () => {\n  const [RecentlyPlayed, setRecentlyPlayed] = useState();\n\n  // variable limit? with useeffect to load more maybe on scroll down, limit will change\n  useEffect(() => {\n    spotifyApi\n      .getMyRecentlyPlayedTracks({\n        limit: 50,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setRecentlyPlayed({\n            items: response.items,\n          });\n        }\n      })\n      .catch(() => {\n        token = getAccessToken()\n      });;\n  }, []);\n  console.log(RecentlyPlayed);\n\n  return (\n    <div>\n      {RecentlyPlayed ? (\n        <div className=\"recently-played\">\n          <h2>Recently played tracks</h2>\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Duration</th>\n                <th>Track</th>\n                <th>Artist(s)</th>\n                <th>Played at</th>\n              </tr>\n            </thead>\n            <tbody>\n              {RecentlyPlayed.items.map((item) =>\n                TableItem(item)\n              )}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <b>LOADING</b>\n      )}\n    </div>\n  );\n};\nexport default RecentTracks;\n"]},"metadata":{},"sourceType":"module"}