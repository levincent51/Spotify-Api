{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/App.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Dashboard from \"./Pages/Dashboard\";\nimport { token } from \"./components/spotifyAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  //https://reactrouter.com/\n  // PLAN, USE THIS AS REFERENCE: https://github.com/aneeshnema/spotify-stats/blob/master/client/src/spotify/index.js\n  // BASICALLY create a component for storing all spotify api calls\n  // NEXT COMPONENT SHOULD BE REFRESHING TOKEN, IF a certain time has expired we must auto refresh\n  // calling back to server and getting new access token\n  // CHECK INDEX.html of our auth server for this and ALSO UPDATE OUR ACCESS TOKEN AFTER using setACCES\n\n  /*Router\n  Router component is what makes the connection between browser location and the react application. It doesn't render anything visible on your page. It just exposes API to interact with location changes of the browser via React context. So any component down the tree can use this API to change their behavior based on location changes in the browser or change the browser location into what they want.\n  Router is the abstract for all other specific router components. Practically, we use a specific implementation of it like BrowserRouter, MemoryRouter, and HashRouter which use different methods to manage browser history. Also, Router is usually a top-level component in the component tree and use only one time in the entire application. All other react-router components should be descendants of Router as they can't function without the API which Router provides.*/\n  // OUR APP SHOULD RETURN\n  // return DASHBOARD OR LOGIN SCREEN\n  // our DASHBOARD SHOULD BE ALL THE INFO\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: token ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 56\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/App.js"],"names":["React","Component","useState","useEffect","Login","Dashboard","token","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,SAASC,KAAT,QAAsB,yBAAtB;;;AAEA,SAASC,GAAT,GAAe;AACb;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACF;AACA;AAIE;AACA;AACA;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAAsBD,KAAK,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAmB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KArBQC,G;AAuBT,eAAeA,GAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Dashboard from \"./Pages/Dashboard\";\n\nimport { token } from \"./components/spotifyAPI\";\n\nfunction App() {\n  //https://reactrouter.com/\n\n  // PLAN, USE THIS AS REFERENCE: https://github.com/aneeshnema/spotify-stats/blob/master/client/src/spotify/index.js\n  // BASICALLY create a component for storing all spotify api calls\n\n  // NEXT COMPONENT SHOULD BE REFRESHING TOKEN, IF a certain time has expired we must auto refresh\n  // calling back to server and getting new access token\n  // CHECK INDEX.html of our auth server for this and ALSO UPDATE OUR ACCESS TOKEN AFTER using setACCES\n\n  /*Router\n\nRouter component is what makes the connection between browser location and the react application. It doesn't render anything visible on your page. It just exposes API to interact with location changes of the browser via React context. So any component down the tree can use this API to change their behavior based on location changes in the browser or change the browser location into what they want.\n\nRouter is the abstract for all other specific router components. Practically, we use a specific implementation of it like BrowserRouter, MemoryRouter, and HashRouter which use different methods to manage browser history. Also, Router is usually a top-level component in the component tree and use only one time in the entire application. All other react-router components should be descendants of Router as they can't function without the API which Router provides.*/\n\n  // OUR APP SHOULD RETURN\n  // return DASHBOARD OR LOGIN SCREEN\n  // our DASHBOARD SHOULD BE ALL THE INFO\n\n  return <div className=\"App\">{token ? <Dashboard /> : <Login />}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}