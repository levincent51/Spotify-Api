{"version":3,"sources":["Pages/Login.js","components/functions.js","components/Navbar.js","components/spotifyAPI.js","components/TrackInfo.js","Pages/TopTracks.js","Pages/RecentTracks.js","Pages/Dashboard.js","App.js","index.js"],"names":["Login","className","href","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","LogoutButton","window","localStorage","clear","location","replace","useState","loggedOut","setLoggedOut","Redirect","to","push","Button","onClick","removeItem","Navbar","activeStyle","fontWeight","color","style","float","spotifyApi","SpotifyWebApi","refreshAccessToken","a","refresh_token","getItem","axios","get","SERVER","params","then","res","access_token","data","console","log","setItem","Date","now","reload","catch","e","token","hashParams","r","q","hash","substring","exec","decodeURIComponent","getHashParams","error","tokenExpiry","getAccessToken","setAccessToken","TrackInfo","track","uri","src","album","images","url","alt","artists","map","name","join","TopTracks","toggleState","setToggleState","tracks","setTracks","timeRange","setTimeRange","toggleTab","index","time_range","newTimeRange","useEffect","getMyTopTracks","limit","response","items","getNewReleases","key","RecentTracks","RecentlyPlayed","setRecentlyPlayed","getMyRecentlyPlayedTracks","item","duration_ms","tabIndex","format","parse","played_at","TableItem","Dashboard","isPlaying","setIsPlaying","interval","setInterval","getMyCurrentPlaybackState","is_playing","clearInterval","path","syncExternalDevice","syncExternalDeviceInterval","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a34a5b9e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Login.css\";\n\nconst SERVER_URL = \"https://react-express-spotify.herokuapp.com/login\";\n\nexport default function Login() {\n  return (\n    <div className=\"login\">\n\n      <p>\n        An insight into your listening habits on Spotify\n      </p>\n      <a href={SERVER_URL}> Login to Spotify </a>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\n// gets hash parameters\nexport function getHashParams() {\n  var hashParams = {};\n  var e,\n    r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(1);\n  e = r.exec(q);\n  while (e) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n    e = r.exec(q);\n  }\n\n  return hashParams;\n}\n\nexport function millisToMinutesAndSeconds(millis) {\n  var minutes = Math.floor(millis / 60000);\n  var seconds = ((millis % 60000) / 1000).toFixed(0);\n  return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n}\n\n\nexport const LogoutButton = () => {\n  window.localStorage.clear();\n  window.location.replace(\"/\");\n  const [loggedOut, setLoggedOut] = useState(false);\n\n  const logout = () => {\n    localStorage.removeItem(\"whpf_user\");\n    setLoggedOut(true);\n  };\n\n  if (loggedOut) {\n    return <Redirect to=\"/\" push={true} />;\n  }\n\n  return <Button onClick={logout}>LogOut</Button>;\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <li>\n        <NavLink to=\"/\">HOME</NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/TopTracks\"\n          activeStyle={{\n            fontWeight: \"bold\",\n            color: \"green\",\n          }}\n        >\n          Top Tracks\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to=\"/RecentTracks\"\n          activeStyle={{\n            fontWeight: \"bold\",\n            color: \"green\",\n          }}\n        >\n          RecentlyPlayed\n        </NavLink>\n      </li>\n      <li style={{ float: \"right\" }}>\n  \n        <NavLink to=\"/logout\">Logout</NavLink>\n      </li>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import axios from \"axios\";\nimport { getHashParams, getObject, setObject } from \"./functions\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst EXPIRATION_TIME = 3600000; // 1 hour\nconst SERVER = \"https://react-express-spotify.herokuapp.com/\"; // or https://react-express-spotify.herokuapp.com http://localhost:8888\n//REFRESH ACCESS TOKEN EVERY 1 HOUR\n// REFRESH_URI\n\n// USES JMPerez's spotify-web-api-js\n\nexport const spotifyApi = new SpotifyWebApi();\n\n// constantly refreshing\nexport const refreshAccessToken = async () => {\n  // take refresh token from local storage\n  const refresh_token = window.localStorage.getItem(\"refresh_token\");\n  axios\n    .get(SERVER + \"refresh_token\", {\n      params: {\n        refresh_token: refresh_token,\n      },\n    })\n    .then((res) => {\n      const access_token = res.data.access_token;\n      console.log(\"New acccess_token\", access_token);\n      window.localStorage.setItem(\"access_token\", access_token);\n      window.localStorage.setItem(\"token_timestamp\", Date.now());\n      window.location.reload();\n    })\n    .catch((e) => console.log(e));\n};\n\n// GET TOKEN, REFRESH IF REQUIRED\nexport const getAccessToken = () => {\n  // Takes token from our url\n\n  const { error, access_token, refresh_token } = getHashParams();\n\n  //  token invalid freom timeout\n  if (error) {\n    console.log(error);\n    refreshAccessToken();\n  }\n\n  if (access_token && refresh_token) {\n    window.location.replace(\"/\");\n    window.localStorage.setItem(\"access_token\", access_token);\n    window.localStorage.setItem(\"refresh_token\", refresh_token);\n    window.localStorage.setItem(\"token_timestamp\", Date.now());\n\n    return access_token;\n  }\n  // THIS WILL AUTO REFRESH OUR TOKEN BASED ON EXPIRY TIME\n  const tokenExpiry = window.localStorage.getItem(\"token_timestamp\");\n\n  if (\n    tokenExpiry &&\n    tokenExpiry !== \"undefined\" &&\n    Date.now() - tokenExpiry > EXPIRATION_TIME\n  ) {\n    console.log(\"Token expired, refreshing token\");\n    refreshAccessToken();\n  }\n\n  const local_access_token = window.localStorage.getItem(\"access_token\");\n\n  return local_access_token;\n};\n\n// SET OUR TOKEN with our spotify-web-api-js\nexport const token = getAccessToken();\n\nspotifyApi.setAccessToken(token);\n","import React from \"react\";\n\n// our track card for displaying artist, trackname and the picture\nconst TrackInfo = ({ track }) => {\n  return (\n    <a className=\"TrackInfoLink\" href={track.uri}>\n      <div className=\"card\">\n        <img src={track.album.images[1].url} alt=\"Track\" />\n        <div className=\"containerCard\">\n          <h4>\n            <b>{track.artists.map((e) => e.name).join(\", \")}</b>\n          </h4>\n          <p>{track.name}</p>\n        </div>\n      </div>\n    </a>\n  );\n};\n\nexport default TrackInfo;\n","import React, { useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport TrackInfo from \"../components/TrackInfo\";\n\nconst TopTracks = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [tracks, setTracks] = useState();\n  const [timeRange, setTimeRange] = useState(\"short_term\");\n\n  const changeTerm = (newTimeRange) => {\n    setTracks();\n    setTimeRange(newTimeRange);\n  };\n  const toggleTab = (index, time_range) => {\n    changeTerm(time_range);\n    setToggleState(index);\n  };\n  useEffect(() => {\n    spotifyApi\n      .getMyTopTracks({\n        limit: 50,\n        time_range: timeRange,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setTracks({\n            items: response.items,\n          });\n        }\n      });\n\n    spotifyApi.getNewReleases().then((response) => {\n      console.log(response);\n    });\n  }, [timeRange]);\n\n  return (\n    <div>\n      <h2>Top Tracks</h2>\n\n      <div className=\"container\">\n        <div className=\"bloc-tabs\">\n          <button\n            className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(1, \"short_term\")}\n          >\n            4 weeks\n          </button>\n          <button\n            className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(2, \"medium_term\")}\n          >\n            6 months\n          </button>\n          <button\n            className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n            onClick={() => toggleTab(3, \"long_term\")}\n          >\n            All time\n          </button>\n        </div>\n        {tracks ? (\n          <div className=\"content-tabs\">\n            <div\n              className={\n                toggleState === 1 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n\n            <div\n              className={\n                toggleState === 2 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n\n            <div\n              className={\n                toggleState === 3 ? \"content  active-content\" : \"content\"\n              }\n            >\n              {tracks.items.map((track, key) => (\n                <TrackInfo key={key} track={track} />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <b>LOADING</b>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TopTracks;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport format from \"date-fns/format\";\nimport { millisToMinutesAndSeconds } from \"../components/functions\";\n\nconst TableItem = (item, index) => (\n  <tr key={item.played_at}>\n    <td>\n      <a href={item.track.uri} className=\"row-link\">\n        {millisToMinutesAndSeconds(item.track.duration_ms)}\n      </a>\n    </td>\n\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.name}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {item.track.artists.map((e) => e.name).join(\", \")}\n      </a>\n    </td>\n    <td>\n      <a href={item.track.uri} tabIndex=\"-1\" className=\"row-link\">\n        {format(Date.parse(item.played_at), \"dd/MM/yyyy, hh:mma\")}\n      </a>\n    </td>\n  </tr>\n);\n\nconst RecentTracks = () => {\n  const [RecentlyPlayed, setRecentlyPlayed] = useState();\n\n  // variable limit? with useeffect to load more maybe on scroll down, limit will change\n  useEffect(() => {\n    spotifyApi\n      .getMyRecentlyPlayedTracks({\n        limit: 50,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setRecentlyPlayed({\n            items: response.items,\n          });\n        }\n      });\n  }, []);\n  console.log(RecentlyPlayed);\n\n  return (\n    <div>\n      {RecentlyPlayed ? (\n        <div className=\"recently-played\">\n          <h2>Recently played tracks</h2>\n\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Duration</th>\n                <th>Track</th>\n                <th>Artist(s)</th>\n                <th>Played at</th>\n              </tr>\n            </thead>\n            <tbody>\n              {RecentlyPlayed.items.map((item, index) =>\n                TableItem(item, index)\n              )}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <b>LOADING</b>\n      )}\n    </div>\n  );\n};\nexport default RecentTracks;\n","import React, {  useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { LogoutButton } from \"../components/functions\";\nimport Navbar from \"../components/Navbar\";\nimport TopTracks from \"./TopTracks\";\nimport RecentTracks from \"./RecentTracks\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { spotifyApi, token } from \"../components/spotifyAPI\";\n\nexport default function Dashboard() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  // Note the spotify web player SDK is in beta so performance is janky\n  useEffect(() => {\n    const interval = setInterval( async () => {\n      spotifyApi.getMyCurrentPlaybackState().then((response) => {\n        if (response) {\n          if (response.is_playing) {\n            setIsPlaying(true);\n          }\n        } else if (!response) {\n          setIsPlaying(false);\n        }\n      });\n    }, 150);\n    return () => clearInterval(interval);\n  }, [isPlaying]);\n\n  //return should return, getTOPTRACKS, make playlist\n  // DashBoard should tell us our favourite genre based on our top artist\n  return (\n    <BrowserRouter>\n      <div /* will make a header bar FOR ALL OUR BROWSER ROUTES*/>\n        <Navbar />\n\n        <Switch>\n          <Route path=\"/RecentTracks\">\n            <RecentTracks />\n          </Route>\n          <Route path=\"/logout\">\n            <LogoutButton />\n          </Route>\n          <Route path=\"/TopTracks\">\n            <TopTracks />\n          </Route>\n          <Route path=\"/\">\n            <h1>WELCOME TO SPOTIFY API</h1>\n          </Route>\n        </Switch>\n        {isPlaying ? (\n          <div className=\"player\">\n            <b>Currently Playing</b>\n            <SpotifyPlayer\n              token={token}\n              syncExternalDevice={true}\n              syncExternalDeviceInterval={1}\n            />\n          </div>\n        ) : (\n          <div className=\"player\">\n            <b>Currently Not Playing Anything </b>\n          </div>\n        )}\n      </div>\n    </BrowserRouter>\n  );\n}\n// ****** NESTED ROUTING\n","import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Pages/Login\";\nimport Dashboard from \"./Pages/Dashboard\";\n\nimport { token } from \"./components/spotifyAPI\";\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">{token ? <Dashboard/> : <Login />}</div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}