{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-api-project/client/src/Pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { LogoutButton } from \"../components/functions\";\nimport TopTracks from \"./TopTracks\";\nimport RecentTracks from \"./RecentTracks\";\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { spotifyApi } from \"../components/spotifyAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard({\n  token\n}) {\n  _s();\n\n  console.log(window.localStorage.getItem(\"access_token\")); // get Top tracks, useEffect hook to get either 4weeks, 6 months or all time\n\n  const [current, setCurrent] = useState();\n  useEffect(() => {\n    spotifyApi.getMyRecentlyPlayedTracks({\n      limit: 1\n    }).then(response => {\n      if (response) {\n        console.log(response);\n        setCurrent(response.items[0].track.uri);\n      }\n    });\n  }, []);\n  console.log(current); //return should return, getTOPTRACKS, make playlist\n  // DashBoard should tell us our favourite genre based on our top artist\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/TopTracks\",\n            children: \"Top Tracks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/RecentTracks\",\n            children: \"RecentlyPlayed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RecentTracks\",\n          children: /*#__PURE__*/_jsxDEV(RecentTracks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          children: /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/TopTracks\",\n          children: /*#__PURE__*/_jsxDEV(TopTracks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n            token: token,\n            autoPlay: true,\n            syncExternalDevice: true,\n            syncExternalDeviceInterval: 3,\n            uris: current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // ****** NESTED ROUTING\n\n_s(Dashboard, \"uvFezLwn+gJf846iuKQF3Fru6BU=\");\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/macuser/project/spotify-api-project/client/src/Pages/Dashboard.js"],"names":["React","Component","useState","useEffect","BrowserRouter","Route","Switch","Link","LogoutButton","TopTracks","RecentTracks","SpotifyPlayer","spotifyApi","Dashboard","token","console","log","window","localStorage","getItem","current","setCurrent","getMyRecentlyPlayedTracks","limit","then","response","items","track","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA4B;AAAA;;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAZ,EADyC,CAEzC;;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,EAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CACPU,yBADH,CAC6B;AACzBC,MAAAA,KAAK,EAAE;AADkB,KAD7B,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACAJ,QAAAA,UAAU,CAACI,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkBC,KAAlB,CAAwBC,GAAzB,CAAV;AACD;AACF,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;AAcAb,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ,EApByC,CAqBzC;AACA;;AACA,sBACE,QAAC,aAAD;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,eAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,KAAK,EAAEN,KAAtB;AAA6B,YAAA,QAAQ,EAAE,IAAvC;AAA6C,YAAA,kBAAkB,EAAE,IAAjE;AAAuE,YAAA,0BAA0B,EAAE,CAAnG;AAAsG,YAAA,IAAI,EAAEM;AAA5G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,C,CACD;;GAxDwBP,S;;KAAAA,S","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { LogoutButton } from \"../components/functions\";\nimport TopTracks from \"./TopTracks\";\nimport RecentTracks from \"./RecentTracks\";\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport { spotifyApi } from \"../components/spotifyAPI\";\n\nexport default function Dashboard({token}) {\n  console.log(window.localStorage.getItem(\"access_token\"));\n  // get Top tracks, useEffect hook to get either 4weeks, 6 months or all time\n\n  const [current, setCurrent] = useState();\n\n  useEffect(() => {\n    spotifyApi\n      .getMyRecentlyPlayedTracks({\n        limit: 1,\n      })\n      .then((response) => {\n        if (response) {\n          console.log(response);\n          setCurrent(response.items[0].track.uri);\n        }\n      });\n  }, []);\n\n\n  console.log(current)\n  //return should return, getTOPTRACKS, make playlist\n  // DashBoard should tell us our favourite genre based on our top artist\n  return (\n    <BrowserRouter>\n      <div /* will make a header bar FOR ALL OUR BROWSER ROUTES*/>\n        <ul>\n          <li>\n            <Link to=\"/TopTracks\">Top Tracks</Link>\n          </li>\n          <li>\n            <Link to=\"/RecentTracks\">RecentlyPlayed</Link>\n          </li>\n          <li>\n            <Link to=\"/logout\">Logout</Link>\n          </li>\n        </ul>\n        \n        <Switch>\n          <Route path=\"/RecentTracks\">\n            <RecentTracks />\n          </Route>\n          <Route path=\"/logout\">\n            <LogoutButton />\n          </Route>\n          <Route path=\"/TopTracks\">\n            <TopTracks />\n          </Route>\n          <Route path=\"/\">\n            <SpotifyPlayer token={token} autoPlay={true} syncExternalDevice={true} syncExternalDeviceInterval={3} uris={current} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n// ****** NESTED ROUTING\n"]},"metadata":{},"sourceType":"module"}