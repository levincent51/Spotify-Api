{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/project/spotify-node-react-starter-kit/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor() {\n    // this constructs object\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      // THIS IS THE OBJECT COMPONENTS, and their properties\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      }\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      if (response) {\n        this.setState({\n          nowPlaying: {\n            name: response.item.name,\n            albumArt: response.item.album.images[0].url\n          }\n        });\n      } else {\n        alert(\"YOU ARE not playing anything\");\n        return;\n      }\n\n      ;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:8888\",\n        children: \" Login to Spotify \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Now Playing: \", this.state.nowPlaying.name, \"Logged in: \", this.state.loggedIn.toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.nowPlaying.albumArt,\n          style: {\n            height: 150\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), this.state.loggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.getNowPlaying(),\n        children: \"Check Now Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macuser/project/spotify-node-react-starter-kit/client/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","constructor","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","alert","render","toString","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;;AAEA,MAAME,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;AACA;AACA,UAAMC,MAAM,GAAG,KAAKC,aAAL,EAAf;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACG,YAArB;;AACA,QAAID,KAAJ,EAAW;AACTL,MAAAA,UAAU,CAACO,cAAX,CAA0BF,KAA1B;AACD;;AACD,SAAKG,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAEJ,KAAK,GAAG,IAAH,GAAU,KAFd;AAGXK,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC;AAHD,KAAb;AAKD;;AACDR,EAAAA,aAAa,GAAG;AACd,QAAIS,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QAAOC,CAAC,GAAG,sBAAX;AAAA,QACIC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CADR;AAEAN,IAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;;AACA,WAAOF,CAAP,EAAU;AACPD,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACAA,MAAAA,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAJ;AACF;;AACD,WAAOH,UAAP;AACD;;AAEDU,EAAAA,aAAa,GAAE;AAEbvB,IAAAA,UAAU,CAACwB,yBAAX,GACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAIA,QAAJ,EAAc;AACZ,aAAKC,QAAL,CAAc;AACdjB,UAAAA,UAAU,EAAE;AACRC,YAAAA,IAAI,EAAEe,QAAQ,CAACE,IAAT,CAAcjB,IADZ;AAERC,YAAAA,QAAQ,EAAEc,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC;AAFhC;AADE,SAAd;AAMD,OAPD,MAOO;AAELC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACD;;AACD;AACD,KAfD;AAiBD;;AAIDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAG,QAAA,IAAI,EAAC,uBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCACiB,KAAKzB,KAAL,CAAWE,UAAX,CAAsBC,IADvC,iBAEc,KAAKH,KAAL,CAAWC,QAAX,CAAoByB,QAApB,EAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWE,UAAX,CAAsBE,QAAhC;AAA0C,UAAA,KAAK,EAAE;AAAEuB,YAAAA,MAAM,EAAE;AAAV;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,EASI,KAAK3B,KAAL,CAAWC,QAAX,iBACA;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AApEyB;;AAuE5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\n\nclass App extends Component {\n  constructor(){\n    // this constructs object\n    super();\n    const params = this.getHashParams();\n    const token = params.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    this.state = {\n      // THIS IS THE OBJECT COMPONENTS, and their properties\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n    }\n  }\n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n  \n    spotifyApi.getMyCurrentPlaybackState()\n    .then((response) => {\n      if (response) {\n        this.setState({\n        nowPlaying: { \n            name: response.item.name, \n            albumArt: response.item.album.images[0].url\n          }\n        })\n      } else {\n\n        alert(\"YOU ARE not playing anything\")\n        return\n      }\n      ;\n    })\n    \n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href='http://localhost:8888' > Login to Spotify </a>\n        <div>\n          Now Playing: { this.state.nowPlaying.name }\n          Logged in: {this.state.loggedIn.toString()}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}