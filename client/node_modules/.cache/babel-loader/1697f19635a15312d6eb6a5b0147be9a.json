{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncIterator from\"/Users/macuser/Project Spotify/Spotify-Api/client/node_modules/@babel/runtime/helpers/esm/asyncIterator\";import TrackInfo from\"../components/TrackInfo\";import React,{useState,useEffect,useCallback,useRef}from\"react\";import{spotifyApi,getAccessToken}from\"../components/spotifyAPI\";import{arraySplice,getplaylists,getAllSongs}from\"../components/UserSongs\";import{Slider,Typography,Switch,CircularProgress}from\"@material-ui/core\";// TODO -> Option to disable some slider options, change cards into grids, then click/hover to get audio features.\n/*\nDanceability: The degree of how suitable a track is for dancing based on tempo, rhythm stability, beat strength, and overall regularity. (0~1)\nEnergy: The perceptual measure of intensity based on dynamic range, perceived loudness, timbre, onset rate, and general entropy. (0~1)\nKey: The estimated overall pitch class of the track and its type of scale from which its melodic content is derived.\nLoudness: The quality of a sound that is the primary psychological correlate of amplitude in decibel. (-60~0)\nSpeechiness: The presence of spoken words in a track. (0~1)\nAcousticness: The confidence measure whether the track is acoustic. (0~1)\nLiveness: The presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. (0~1)\nValence: The musical positiveness conveyed by a track (e.g. happy, cheerful, euphoric). (0~1)\nTempo: The overall estimated tempo of a track in beats per minute (BPM). (Â±50~200)*/import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Moods=function Moods(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),audioFet=_useState2[0],setAudioFet=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),allSongs=_useState4[0],setAllSongs=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),search=_useState6[0],setSearch=_useState6[1];var totalSongs=useRef(0);var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),songs=_useState8[0],setSongs=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),tracks=_useState10[0],setTracks=_useState10[1];var audio_feat=JSON.parse(window.sessionStorage.getItem(\"audio_features\"));var trackstorage=JSON.parse(window.sessionStorage.getItem(\"tracks\"));var getTracksfromList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(arraysplice){var Tracks,i,c;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:Tracks={tracks:[]};i=0;case 2:if(!(i<arraysplice.length)){_context.next=10;break;}_context.next=5;return spotifyApi.getTracks(arraysplice[i].map(function(x){return x.id;}));case 5:c=_context.sent;Tracks.tracks=[].concat(_toConsumableArray(Tracks.tracks),_toConsumableArray(c.tracks));case 7:i++;_context.next=2;break;case 10:setTracks(Tracks);case 11:case\"end\":return _context.stop();}}},_callee);}));return function getTracksfromList(_x){return _ref.apply(this,arguments);};}();useEffect(function(){if(!trackstorage){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var all_songs;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:all_songs=[];_context3.next=3;return getplaylists([],50,0).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response){var _iteratorAbruptCompletion,_didIteratorError,_iteratorError,_iterator,_step,index,unique;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(\"Fetching all songs...\");_iteratorAbruptCompletion=false;_didIteratorError=false;_context2.prev=3;_iterator=_asyncIterator(response.map(function(x){return x.id;}));case 5:_context2.next=7;return _iterator.next();case 7:if(!(_iteratorAbruptCompletion=!(_step=_context2.sent).done)){_context2.next=20;break;}index=_step.value;_context2.t0=[];_context2.t1=_toConsumableArray(all_songs);_context2.t2=_toConsumableArray;_context2.next=14;return getAllSongs(index);case 14:_context2.t3=_context2.sent;_context2.t4=(0,_context2.t2)(_context2.t3);all_songs=_context2.t0.concat.call(_context2.t0,_context2.t1,_context2.t4);case 17:_iteratorAbruptCompletion=false;_context2.next=5;break;case 20:_context2.next=26;break;case 22:_context2.prev=22;_context2.t5=_context2[\"catch\"](3);_didIteratorError=true;_iteratorError=_context2.t5;case 26:_context2.prev=26;_context2.prev=27;if(!(_iteratorAbruptCompletion&&_iterator.return!=null)){_context2.next=31;break;}_context2.next=31;return _iterator.return();case 31:_context2.prev=31;if(!_didIteratorError){_context2.next=34;break;}throw _iteratorError;case 34:return _context2.finish(31);case 35:return _context2.finish(26);case 36:// instead of set state maybe import this from home\n// filter duplicates\nunique=_toConsumableArray(new Set(all_songs));setAllSongs(unique);window.sessionStorage.setItem(\"tracks\",JSON.stringify(unique));totalSongs.current=unique.length;case 40:case\"end\":return _context2.stop();}}},_callee2,null,[[3,22,26,36],[27,,31,35]]);}));return function(_x2){return _ref3.apply(this,arguments);};}());case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();}else{console.log(\"Fetching all songs...\");setAllSongs(trackstorage);totalSongs.current=trackstorage.length;}},[]);//console.log(allSongs)\nuseEffect(function(){//console.log(allSongs)\nif(!audio_feat){if(allSongs){var get=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(all_audio){var _iterator2,_step2,index,c,audioWithFeat;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_iterator2=_createForOfIteratorHelper(allSongsSpliced);_context4.prev=1;_iterator2.s();case 3:if((_step2=_iterator2.n()).done){_context4.next=11;break;}index=_step2.value;_context4.next=7;return spotifyApi.getAudioFeaturesForTracks(index);case 7:c=_context4.sent;all_audio=[].concat(_toConsumableArray(all_audio),_toConsumableArray(c.audio_features));case 9:_context4.next=3;break;case 11:_context4.next=16;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](1);_iterator2.e(_context4.t0);case 16:_context4.prev=16;_iterator2.f();return _context4.finish(16);case 19:audioWithFeat=all_audio.filter(function(x){return x;});// filter out songs without features\nsetAudioFet(audioWithFeat);window.sessionStorage.setItem(\"audio_features\",JSON.stringify(all_audio));case 22:case\"end\":return _context4.stop();}}},_callee4,null,[[1,13,16,19]]);}));return function get(_x3){return _ref4.apply(this,arguments);};}();var all_audio=[];var allSongsSpliced=arraySplice(allSongs,100);console.log(\"Fetching audio data...\");get(all_audio);}}else{console.log(\"Fetching audio data...\");setAudioFet(audio_feat);}},[allSongs]);useEffect(function(){if(allSongs){setSongs(1);}},[allSongs]);var _useState11=useState(0.5),_useState12=_slicedToArray(_useState11,2),value=_useState12[0],setValue=_useState12[1];var _useState13=useState(0.5),_useState14=_slicedToArray(_useState13,2),value1=_useState14[0],setValue1=_useState14[1];var _useState15=useState(0.5),_useState16=_slicedToArray(_useState15,2),value2=_useState16[0],setValue2=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),vocal=_useState18[0],setVocal=_useState18[1];var handleChange=function handleChange(event,newValue){setValue(newValue/100);};var handleChange1=function handleChange1(event,newValue1){setValue1(newValue1/100);};var handleChange2=function handleChange2(event,newValue2){setValue2(newValue2/100);};var handleVocal=function handleVocal(){setVocal(!vocal);};var filterReq=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var filter,filter2,FilteredSplice;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setTracks();setSearch(true);filter=audioFet.filter(function(x){return x.valence>=value-0.1&&x.valence<=value+0.1&&x.energy>=value1-0.1&&x.energy<=value1+0.1&&x.danceability>=value2-0.1&&x.danceability<=value2+0.1;});if(vocal){filter2=filter.filter(function(x){return x.instrumentalness<=0.4;});}else{filter2=filter.filter(function(x){return x.instrumentalness>=0.8;});}FilteredSplice=arraySplice(filter2,50);console.log(FilteredSplice);getTracksfromList(FilteredSplice);case 7:case\"end\":return _context5.stop();}}},_callee5);})));var marksValence=[{value:0,label:\"sad\"},{value:50,label:\"neutral\"},{value:100,label:\"happy\"}];var marksEnergy=[{value:0,label:\"chill\"},{value:50,label:\"neutral\"},{value:100,label:\"hype\"}];var marksDance=[{value:0,label:\"calm\"},{value:50,label:\"neutral\"},{value:100,label:\"dance!\"}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",\"Gather all your songs and find the perfect songs to match your current mood\"]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Choose source (in development)\"}),/*#__PURE__*/_jsx(\"button\",{children:\" Get All Liked Songs\"}),/*#__PURE__*/_jsx(\"button\",{children:\" Get All Playlists\"}),/*#__PURE__*/_jsx(\"button\",{children:\" Get Only Your Playlists\"}),/*#__PURE__*/_jsx(\"button\",{children:\" Get Everything\"}),/*#__PURE__*/_jsx(\"div\",{children:songs?/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Total Songs Discovered: \",totalSongs.current]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sliders\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{children:\"Mood\"}),/*#__PURE__*/_jsx(Slider,{value:value*100,onChange:handleChange,\"aria-labelledby\":\"discrete-slider-small-steps\",marks:marksValence,min:0,max:100,valueLabelDisplay:\"auto\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{children:\"Energy\"}),/*#__PURE__*/_jsx(Slider,{value:value1*100,onChange:handleChange1,\"aria-labelledby\":\"discrete-slider-small-steps\",marks:marksEnergy,min:0,max:100,valueLabelDisplay:\"auto\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{children:\"Groove\"}),/*#__PURE__*/_jsx(Slider,{value:value2*100,onChange:handleChange2,\"aria-labelledby\":\"discrete-slider-small-steps\",marks:marksDance,min:0,max:100,valueLabelDisplay:\"auto\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{children:\"Vocals\"}),/*#__PURE__*/_jsx(Switch,{onChange:handleVocal,label:\"Vocals\"})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Fetching all Songs....\"}),/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Please do not refresh/leave the page while this is occuring.\"}),\" \"]})}),audioFet?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Songs Found: \",tracks?/*#__PURE__*/_jsx(_Fragment,{children:tracks.tracks.length}):0,\" \"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:filterReq,children:\"Find Songs!\"})}),tracks?tracks.tracks.length?tracks.tracks.map(function(track,key){return/*#__PURE__*/_jsx(TrackInfo,{track:track,index:tracks.tracks.indexOf(track)},key);}):/*#__PURE__*/_jsx(\"p\",{children:\"no songs \"}):search?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(\"p\",{children:\"Click the button to find your songs!\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:songs?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Fetching Audio Data...\"}),\" \",/*#__PURE__*/_jsx(CircularProgress,{})]}):null})]});};export default Moods;","map":{"version":3,"sources":["/Users/macuser/Project Spotify/Spotify-Api/client/src/Pages/Moods.js"],"names":["TrackInfo","React","useState","useEffect","useCallback","useRef","spotifyApi","getAccessToken","arraySplice","getplaylists","getAllSongs","Slider","Typography","Switch","CircularProgress","Moods","audioFet","setAudioFet","allSongs","setAllSongs","search","setSearch","totalSongs","songs","setSongs","tracks","setTracks","audio_feat","JSON","parse","window","sessionStorage","getItem","trackstorage","getTracksfromList","arraysplice","Tracks","i","length","getTracks","map","x","id","c","fetchData","all_songs","then","response","console","log","index","unique","Set","setItem","stringify","current","get","all_audio","allSongsSpliced","getAudioFeaturesForTracks","audio_features","audioWithFeat","filter","value","setValue","value1","setValue1","value2","setValue2","vocal","setVocal","handleChange","event","newValue","handleChange1","newValue1","handleChange2","newValue2","handleVocal","filterReq","valence","energy","danceability","filter2","instrumentalness","FilteredSplice","marksValence","label","marksEnergy","marksDance","track","key","indexOf"],"mappings":"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","sourcesContent":["import TrackInfo from \"../components/TrackInfo\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { spotifyApi, getAccessToken } from \"../components/spotifyAPI\";\nimport {\n  arraySplice,\n  getplaylists,\n  getAllSongs,\n} from \"../components/UserSongs\";\nimport {\n  Slider,\n  Typography,\n  Switch,\n  CircularProgress,\n} from \"@material-ui/core\";\n\n// TODO -> Option to disable some slider options, change cards into grids, then click/hover to get audio features.\n/*\nDanceability: The degree of how suitable a track is for dancing based on tempo, rhythm stability, beat strength, and overall regularity. (0~1)\nEnergy: The perceptual measure of intensity based on dynamic range, perceived loudness, timbre, onset rate, and general entropy. (0~1)\nKey: The estimated overall pitch class of the track and its type of scale from which its melodic content is derived.\nLoudness: The quality of a sound that is the primary psychological correlate of amplitude in decibel. (-60~0)\nSpeechiness: The presence of spoken words in a track. (0~1)\nAcousticness: The confidence measure whether the track is acoustic. (0~1)\nLiveness: The presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. (0~1)\nValence: The musical positiveness conveyed by a track (e.g. happy, cheerful, euphoric). (0~1)\nTempo: The overall estimated tempo of a track in beats per minute (BPM). (Â±50~200)*/\n\nconst Moods = () => {\n  const [audioFet, setAudioFet] = useState();\n  const [allSongs, setAllSongs] = useState();\n  const [search, setSearch] = useState(false);\n  const totalSongs = useRef(0);\n\n  const [songs, setSongs] = useState();\n  const [tracks, setTracks] = useState();\n\n  var audio_feat = JSON.parse(window.sessionStorage.getItem(\"audio_features\"));\n  var trackstorage = JSON.parse(window.sessionStorage.getItem(\"tracks\"));\n\n  const getTracksfromList = async (arraysplice) => {\n    var Tracks = { tracks: [] };\n\n    for (var i = 0; i < arraysplice.length; i++) {\n      const c = await spotifyApi.getTracks(arraysplice[i].map((x) => x.id));\n      Tracks.tracks = [...Tracks.tracks, ...c.tracks];\n    }\n\n    setTracks(Tracks);\n  };\n\n  useEffect(() => {\n    if (!trackstorage) {\n      async function fetchData() {        \n        var all_songs = [];\n        await getplaylists([], 50, 0).then(async (response) => {\n          console.log(\"Fetching all songs...\");\n\n          for await (const index of response.map((x) => x.id)) {\n            all_songs = [...all_songs, ...(await getAllSongs(index))];\n          }\n\n          // instead of set state maybe import this from home\n          // filter duplicates\n          const unique = [...new Set(all_songs)];\n          setAllSongs(unique);\n          window.sessionStorage.setItem(\"tracks\", JSON.stringify(unique));\n          totalSongs.current = unique.length;\n        });\n      }\n      fetchData();\n    } else {\n      console.log(\"Fetching all songs...\");\n      setAllSongs(trackstorage);\n      totalSongs.current = trackstorage.length;\n    }\n  }, []);\n  //console.log(allSongs)\n\n  useEffect(() => {\n    //console.log(allSongs)\n    if (!audio_feat) {\n      if (allSongs) {\n        var all_audio = [];\n\n        const allSongsSpliced = arraySplice(allSongs, 100);\n\n        async function get(all_audio) {\n          for (const index of allSongsSpliced) {\n            const c = await spotifyApi.getAudioFeaturesForTracks(index);\n            all_audio = [...all_audio, ...c.audio_features];\n          }\n          const audioWithFeat = all_audio.filter((x) => x); // filter out songs without features\n          setAudioFet(audioWithFeat);\n          window.sessionStorage.setItem(\n            \"audio_features\",\n            JSON.stringify(all_audio)\n          );\n        }\n        console.log(\"Fetching audio data...\");\n        get(all_audio);\n      }\n    } else {\n      console.log(\"Fetching audio data...\");\n      setAudioFet(audio_feat);\n    }\n  }, [allSongs]);\n\n  useEffect(() => {\n    if (allSongs) {\n      setSongs(1);\n    }\n  }, [allSongs]);\n\n  const [value, setValue] = useState(0.5);\n  const [value1, setValue1] = useState(0.5);\n  const [value2, setValue2] = useState(0.5);\n  const [vocal, setVocal] = useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue / 100);\n  };\n  const handleChange1 = (event, newValue1) => {\n    setValue1(newValue1 / 100);\n  };\n  const handleChange2 = (event, newValue2) => {\n    setValue2(newValue2 / 100);\n  };\n  const handleVocal = () => {\n    setVocal(!vocal);\n  };\n\n  const filterReq = useCallback(async () => {\n    setTracks();\n    setSearch(true);\n    const filter = audioFet.filter(\n      (x) =>\n        x.valence >= value - 0.1 &&\n        x.valence <= value + 0.1 &&\n        x.energy >= value1 - 0.1 &&\n        x.energy <= value1 + 0.1 &&\n        x.danceability >= value2 - 0.1 &&\n        x.danceability <= value2 + 0.1\n    );\n    var filter2;\n    if (vocal) {\n      filter2 = filter.filter((x) => x.instrumentalness <= 0.4);\n    } else {\n      filter2 = filter.filter((x) => x.instrumentalness >= 0.8);\n    }\n    const FilteredSplice = arraySplice(filter2, 50);\n    console.log(FilteredSplice);\n    getTracksfromList(FilteredSplice);\n  });\n\n  const marksValence = [\n    {\n      value: 0,\n      label: \"sad\",\n    },\n    {\n      value: 50,\n      label: \"neutral\",\n    },\n    {\n      value: 100,\n      label: \"happy\",\n    },\n  ];\n\n  const marksEnergy = [\n    {\n      value: 0,\n      label: \"chill\",\n    },\n    {\n      value: 50,\n      label: \"neutral\",\n    },\n    {\n      value: 100,\n      label: \"hype\",\n    },\n  ];\n\n  const marksDance = [\n    {\n      value: 0,\n      label: \"calm\",\n    },\n    {\n      value: 50,\n      label: \"neutral\",\n    },\n    {\n      value: 100,\n      label: \"dance!\",\n    },\n  ];\n\n  return (\n    <>\n      <h1>\n        {\" \"}\n        Gather all your songs and find the perfect songs to match your current\n        mood\n      </h1>\n      <h2>Choose source (in development)</h2>\n      <button> Get All Liked Songs</button>\n      <button> Get All Playlists</button>\n      <button> Get Only Your Playlists</button>\n      <button> Get Everything</button>\n      <div>\n        {songs ? (\n          <div className=\"container\">\n            <h2>Total Songs Discovered: {totalSongs.current}</h2>\n            <div className=\"sliders\">\n              <div>\n                <Typography>Mood</Typography>\n\n                <Slider\n                  value={value * 100}\n                  onChange={handleChange}\n                  aria-labelledby=\"discrete-slider-small-steps\"\n                  marks={marksValence}\n                  min={0}\n                  max={100}\n                  valueLabelDisplay=\"auto\"\n                />\n              </div>\n              <div>\n                <Typography>Energy</Typography>\n\n                <Slider\n                  value={value1 * 100}\n                  onChange={handleChange1}\n                  aria-labelledby=\"discrete-slider-small-steps\"\n                  marks={marksEnergy}\n                  min={0}\n                  max={100}\n                  valueLabelDisplay=\"auto\"\n                />\n              </div>\n              <div>\n                <Typography>Groove</Typography>\n\n                <Slider\n                  value={value2 * 100}\n                  onChange={handleChange2}\n                  aria-labelledby=\"discrete-slider-small-steps\"\n                  marks={marksDance}\n                  min={0}\n                  max={100}\n                  valueLabelDisplay=\"auto\"\n                />\n              </div>\n              <div>\n                <Typography>Vocals</Typography>\n                <Switch onChange={handleVocal} label=\"Vocals\" />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            <b>Fetching all Songs....</b>\n            <CircularProgress />\n            <p>\n              Please do not refresh/leave the page while this is occuring.\n            </p>{\" \"}\n          </>\n        )}\n      </div>\n\n      {audioFet ? (\n        <div>\n          <p>Songs Found: {tracks ? <>{tracks.tracks.length}</> : 0} </p>\n          <div>\n            <button onClick={filterReq}>Find Songs!</button>\n          </div>\n\n          {tracks ? (\n            tracks.tracks.length ? (\n              tracks.tracks.map((track, key) => (\n                <TrackInfo\n                  key={key}\n                  track={track}\n                  index={tracks.tracks.indexOf(track)}\n                />\n              ))\n            ) : (\n              <p>no songs </p>\n            )\n          ) : search ? (\n            <CircularProgress />\n          ) : (\n            <p>Click the button to find your songs!</p>\n          )}\n        </div>\n      ) : (\n        <>\n          {songs ? (\n            <>\n              <b>Fetching Audio Data...</b> <CircularProgress />\n            </>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Moods;\n"]},"metadata":{},"sourceType":"module"}